{"version":3,"sources":["assets\\Game\\Scripts\\Common\\Base\\PlayerInfo.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DataCenter, { dc, field } from \"../../../../framework/core/DataCenter\";\r\nimport gameUtil from \"../../../../framework/utils/gameUtil\";\r\nimport Platform from \"../../../../framework/extension/Platform\";\r\nimport { UserInfo } from \"../../../../framework/extension/weak_net_game/UserInfo\";\r\nimport WeakNetGame from \"../../../../framework/extension/weak_net_game/WeakNetGame\";\r\nimport Net from \"../../../../framework/misc/Net\";\r\nimport { Api } from \"./ServerConfig\";\r\nimport { evt } from \"../../../../framework/core/event\";\r\n\r\nconst arr_1234 = [1, 2, 3, 4]\r\n\r\n@dc(\"PlayerInfo\")\r\nexport default class PlayerInfoDC extends DataCenter {\r\n\r\n   //解锁关卡\r\n   @field()\r\n   level: number = 1;\r\n\r\n   //当前关卡\r\n   @field()\r\n   playinglevel: number = 1;\r\n\r\n   //是否在游玩每日关卡\r\n   @field()\r\n   isPlayingDaily: boolean = false;\r\n\r\n   //是否在游玩特殊关卡\r\n   @field()\r\n   isPlayingSpecial: boolean = false;\r\n\r\n   //解锁每日关卡\r\n   @field()\r\n   dailylevel: number = 1;\r\n\r\n   //当前游玩每日关卡\r\n   @field()\r\n   playingDailyLevel: number = 0;\r\n\r\n   //体力\r\n   @field()\r\n   labour: number = 10;\r\n\r\n   //体力恢复 剩余时间\r\n   @field()\r\n   buff_labour: number = 0;\r\n\r\n   //上次退出的时间\r\n   @field()\r\n   lastExitTime: number = 0;\r\n\r\n\r\n   @field()\r\n   challenge_level_unlocked: boolean = false;\r\n\r\n\r\n\r\n\r\n   /**邀请者的id */\r\n   @field()\r\n   inviterId: number = 0\r\n\r\n   @field()\r\n   openId: string = \"\";\r\n\r\n   /**\r\n    * 每次添加 删除 字段，需要带上版本号  \r\n    * 升级后，新的key 会被加入，删除的key，会保留 ，版本好不会更新\r\n    * */\r\n   /**version 2:\r\n    * -inited\r\n    * version 3:\r\n    * - isguided (removed)\r\n    * - is_guide_4 (add)\r\n    * - isguided_badman (add)\r\n    */\r\n   @field()\r\n   version = 3;\r\n\r\n   @field()\r\n   inited: boolean = false;\r\n\r\n   //是否过引导4关\r\n   @field()\r\n   is_guide_4 = false;\r\n\r\n\r\n   //挑战模式阶段礼包\r\n   @field()\r\n   challenge_gift: number[] = [];\r\n\r\n   //关卡星星数量\r\n   @field()\r\n   level_star: { [index: number]: number } = {};\r\n\r\n   //我的收藏宝贝\r\n   @field()\r\n   collections: { [index: number]: number } = {};\r\n\r\n   //是否过引导15关\r\n   @field()\r\n   is_guide_15 = false;\r\n\r\n   //**是否正在引导 */\r\n   isInGuide = false;\r\n\r\n   /**是否引导过坏人关卡 */\r\n   @field()\r\n   isguided_badman: boolean = false;\r\n\r\n   /**是否解锁道具 */\r\n   @field()\r\n   isUnlock_Prop: boolean = false;\r\n\r\n   @field()\r\n   guide: number = 1;\r\n\r\n   @field()\r\n   boxProgress: number = 0;\r\n\r\n   //1 : win , -1 : lose  , 0:unsure\r\n   winStatus: number = 0;\r\n\r\n   ///////////////////////////[chapter help]////////////////////////////\r\n   @field()\r\n   newchapter: { [index: number]: number } = {}\r\n\r\n   ///////////////////////////[skin data]////////////////////////////\r\n   // [id:status]\r\n   @field()\r\n   skins: { [index: number]: number } = {}\r\n\r\n\r\n   @field()\r\n   isFavClaimed:boolean = false;\r\n\r\n\r\n   claimFav(){\r\n      this.isFavClaimed = true;\r\n      this.save(\"isFavClaimed\")\r\n   }\r\n\r\n   initSkinData() {\r\n      csv.on('load', v => {\r\n         if (v != 'Skin') return;\r\n         csv.Skin.values.forEach(v => {\r\n            if (v.unlockType == 4) {\r\n               //默认选择\r\n               if (this.skins[v.id] == null) {\r\n                  this.skins[v.id] = 2;\r\n               }\r\n            }\r\n         })\r\n      })\r\n   }\r\n\r\n   /**是否已解锁 */\r\n   isSkinUnlocked(id) {\r\n      let s = this.skins[id]\r\n      return s >= 1;\r\n   }\r\n   /**是否正在使用中 */\r\n   isSkinUsing(id) {\r\n      return this.skins[id] == 2;\r\n   }\r\n\r\n\r\n   isAllSkinUnlocked() {\r\n      let res = csv.Skin.values.filter(v => arr_1234.indexOf(v.subType) > -1 && v.unlockType === 3)\r\n         .every(_ => this.isSkinUnlocked(_.id));\r\n      return res;\r\n   }\r\n\r\n   unlockSkin(id) {\r\n      if (this.isSkinUnlocked(id)) return;\r\n      this.skins[id] = 1;\r\n      this.save('skins');\r\n   }\r\n\r\n   randomVideoSkin() { // 不含主题和钥匙\r\n      let res = csv.Skin.values.filter(_ => arr_1234.indexOf(_.subType) > -1 && _.unlockType === 3);\r\n      g.shuffle(res);\r\n      for (let i = 0; i < res.length; i++) {\r\n         if (!this.skins[res[i].id]) {\r\n            return res[i].id;\r\n         }\r\n      }\r\n      return 0;\r\n   }\r\n\r\n   useSkin(id) {\r\n      if (!this.isSkinUnlocked(id)) return;\r\n      let data: csv.Skin_Row = csv.Skin.get(id);\r\n      let sameTypeSkins = csv.Skin.search(v => v.type == data.type && v.subType == data.subType && v.id != id)\r\n      sameTypeSkins.forEach(v => {\r\n         if (PlayerInfo.skins[v.id] == 2)\r\n            PlayerInfo.skins[v.id] = 1;\r\n      })\r\n      this.skins[id] = 2;\r\n      this.save('skins');\r\n   }\r\n\r\n   ///////////////////////////[skin data end]////////////////////////////\r\n\r\n\r\n   ///////////////////////////[collection data start]////////////////////////////\r\n\r\n   initDecoreateData() {\r\n      csv.on('load', v => {\r\n         if (v != 'Collection') return;\r\n         csv.Collection.values.forEach(v => {\r\n            if (v.unlockType == 1) {\r\n               //默认选择\r\n               if (this.collections[v.id] == null) {\r\n                  this.collections[v.id] = 2;\r\n               }\r\n            }\r\n         })\r\n      })\r\n   }\r\n\r\n   /**是否已解锁收藏 */\r\n   isDecorateUnlocked(id) {\r\n      let s = this.collections[id];\r\n      return s >= 1;\r\n   }\r\n\r\n   /**是否正在使用收藏中 */\r\n   isDecorateUsing(id) {\r\n      return this.collections[id] === 2;\r\n   }\r\n\r\n   unlockDecorate(id) {\r\n      if (this.isDecorateUnlocked(id)) return;\r\n      this.collections[id] = 1;\r\n      this.save('collections');\r\n   }\r\n\r\n   useDecorate(id) {\r\n      if (!this.isDecorateUnlocked(id)) return;\r\n      let data: csv.Collection_Row = csv.Collection.get(id);\r\n      let sameTypeDecorates = csv.Collection.search(v => v.type == data.type && v.id != id);\r\n      sameTypeDecorates.forEach(v => {\r\n         if (data.type !== 1 && PlayerInfo.collections[v.id] == 2)\r\n            PlayerInfo.collections[v.id] = 1;\r\n      });\r\n      this.collections[id] = 2;\r\n      this.save('collections');\r\n   }\r\n\r\n\r\n   ///////////////////////////[sign start]////////////////////////////\r\n   @field()\r\n   signCount: number = 0;\r\n\r\n   @field()\r\n   signTime: number = 0;\r\n\r\n   ///////////////////////////[sign start]////////////////////////////\r\n\r\n\r\n   @field()\r\n   star: number = 0;\r\n\r\n\r\n   //连续胜利\r\n   winLink: number = 0;\r\n\r\n   @field({ persistent: false, enumerable: false, readonly: true })\r\n   lld: Date = new Date();\r\n\r\n   nowTili: number = 0;\r\n   //当天是否消耗过体力\r\n   @field()\r\n   isUse: boolean = false;\r\n\r\n   maxDailyLv: number = 0;\r\n   playTime: number = 0;\r\n   isRandomLevel: boolean = false;\r\n   init() {\r\n      //如果是新用户\r\n      if (UserInfo.isNew) {\r\n         //如果没有过初始化用户数据\r\n         if (this.inited == false) {\r\n            this.inited = true;\r\n            //初始化初始体力\r\n            this.labour = csv.Config.Init_Energy || 5;\r\n            //变成未引导状态 \r\n            //0表示未进行过任何引导\r\n            this.guide = 0;\r\n            this.save();\r\n         }\r\n      }\r\n   }\r\n\r\n   onStartLevel() {\r\n      this.playTime = 0;\r\n   }\r\n\r\n   onLoadAll() {\r\n      // this.updateBuffs();\r\n      //update skin data\r\n      this.initSkinData();\r\n      this.initDecoreateData();\r\n   }\r\n\r\n   saveExit() {\r\n      this.lastExitTime = Date.now() / 1000;\r\n      this.save('buff_labour')\r\n      console.log(this.buff_labour);\r\n      this.save(\"lastExitTime\")\r\n   }\r\n\r\n   updateBuffs() {\r\n\r\n      if (this.buff_labour > 0) {\r\n         let diff_sec = (Date.now() / 1000 - this.lastExitTime);\r\n         // 200 260 \r\n         // -60\r\n         console.log(\"离线时体力\" + this.labour);\r\n         console.log(\"离线时长:\" + diff_sec);\r\n         let old = this.labour;\r\n         let [coin, leftTime] = gameUtil.calcOfflineReward(this.labour, this.buff_labour, diff_sec, csv.Config.Max_Energy, 300);\r\n         if (coin >= 0) {\r\n            this.buff_labour = leftTime;\r\n            this.labour = coin;\r\n         }\r\n         let offsetBeforeLLD = (Date.now() - this.lld.getTime()) / 1000;\r\n         //离上次登陆时间 过了超过 10分钟,那么必然恢复满体力\r\n         if (offsetBeforeLLD > 60 * 10 * csv.Config.Max_Energy) {\r\n            this.labour = csv.Config.Max_Energy;\r\n         }\r\n         console.log(\"现在体力\" + this.labour);\r\n         PlayerInfo.nowTili = this.labour;\r\n         // if (old < csv.Config.Max_Energy && this.labour >= csv.Config.Max_Energy && !UserInfo.isDy) {\r\n         //    vm.show(\"Prefabs/UI/UISubscriber\");\r\n         // }\r\n         //  if (this.labour > 5) return;\r\n         //  let left = this.buff_labour - diff_sec;\r\n         //  if (left < 0) {\r\n         //      let offline_reward = Math.floor(diff_sec / 300)\r\n         //      if (offline_reward <= 0) offline_reward = 1;\r\n         //      this.labour += Math.min(offline_reward, 5 - this.labour);\r\n         //      if (this.labour >= 5) {\r\n         //          this.buff_labour = 0\r\n         //      } else {\r\n         //          let left_sec = this.buff_labour - diff_sec % 300;\r\n         //          if (left_sec < 0) left_sec = 300 + left_sec;\r\n         //          this.buff_labour = left_sec\r\n         //      }\r\n         //  } else {\r\n         //      this.buff_labour = left;\r\n         //  }\r\n      }\r\n   }\r\n\r\n   upRank() {\r\n      // if (window.tt) return;\r\n      let kvs = [\r\n         { key: \"level\", value: JSON.stringify({ level: PlayerInfo.level, challengelevel: PlayerInfo.dailylevel }) },\r\n      ]\r\n      Platform.uploadScores(kvs)\r\n   }\r\n\r\n   addLabour(add) {\r\n      let c = PlayerInfo.labour + add\r\n      PlayerInfo.labour = c;\r\n      PlayerInfo.save('labour');\r\n   }\r\n\r\n   isShowSDK() {\r\n      //@ts-ignore\r\n      if (window.qq) {\r\n         return false;\r\n         //@ts-ignore\r\n      } else if (window.tt) {\r\n         return false;\r\n      } else if (CC_DEBUG) {\r\n         return false;\r\n         //@ts-ignore\r\n      } else if (window.wx) {\r\n         return true;\r\n      } else {\r\n         return false;\r\n      }\r\n   }\r\n\r\n   isWechat() {\r\n      if (window.qq) {\r\n         return false;\r\n         //@ts-ignore\r\n      } else if (window.tt) {\r\n         return false;\r\n      } else if (CC_DEBUG) {\r\n         return true;\r\n         //@ts-ignore\r\n      } else if (window.wx) {\r\n         return true;\r\n      }\r\n   }\r\n\r\n   save(v?, force = false) {\r\n      if (v) {\r\n         super.save(v);\r\n         this.save_timestamps = Date.now();\r\n         super.save(\"save_timestamps\")\r\n         return;\r\n      }\r\n      else {\r\n         super.save();\r\n      }\r\n      let time = this.save_timestamps\r\n      // do \r\n      if (!force) {\r\n         if (Date.now() - time < 1000 * csv.Config.Sync_User_Data_Time) {\r\n            console.log(\"上报太频繁，下次同步。。。。\")\r\n            return;\r\n         }\r\n      }\r\n      //未登陆不记录保存时间 \r\n      let data = this.toString()\r\n      if (v == null) {\r\n         console.warn(\"Start sync to server!\", data);\r\n         WeakNetGame.syncData(data).then(v => {\r\n            if (v) {\r\n               //同步成功\r\n               console.log(\"上报用户数据成功\")\r\n            }\r\n         })\r\n      }\r\n   }\r\n\r\n   /**领取邀请奖励 */\r\n   // 今天邀请(新，老)\r\n   // openId, invitee, avatarUrl, status\r\n   //总邀请\r\n   // openId, inviteeCount ,claimedCount;\r\n   claimInviteReward() {\r\n\r\n   }\r\n\r\n   /*获取指定关卡所在的章节数，不传参则返回当前已解锁的最后一章 */\r\n   getChapter(lv?) {\r\n      let level = lv ? lv : this.level\r\n      let n = Math.floor((level - 1) / 10) + 1;\r\n      return n;\r\n   }\r\n\r\n   isChapterNew(c) {\r\n      return this.newchapter[c] == null;\r\n   }\r\n\r\n   markChapterOld(c) {\r\n      this.newchapter[c] = 1;\r\n      PlayerInfo.save('newchapter')\r\n   }\r\n\r\n   /**获得当前解锁的关卡数 */\r\n   getCurrentLevel() {\r\n      if (this.isPlayingDaily) {\r\n         return PlayerInfo.dailylevel;\r\n      } else {\r\n         return PlayerInfo.level;\r\n      }\r\n   }\r\n\r\n   /**获得当前正在游玩的关卡数 */\r\n   getCurrentPlayingLevel() {\r\n      if (this.isPlayingDaily) {\r\n         return PlayerInfo.playingDailyLevel;\r\n      } else {\r\n         return PlayerInfo.playinglevel;\r\n      }\r\n   }\r\n\r\n   resetLevel() {\r\n      this.winStatus = 0;\r\n   }\r\n\r\n   lose() {\r\n      this.winStatus = -1;\r\n   }\r\n\r\n   //下一关\r\n   nextLevel() {\r\n      this.winStatus = 1\r\n      let block = false;\r\n      if (this.isPlayingDaily) {\r\n         this.playingDailyLevel += 1;\r\n         if (this.playingDailyLevel > this.dailylevel) {\r\n            this.dailylevel = this.playingDailyLevel;\r\n            if (!window.tt) {\r\n               UserInfo.uploadUserInfo({ level: this.level, challengelevel: this.dailylevel });\r\n               this.upRank();\r\n            }\r\n         }\r\n      } else {\r\n         this.playinglevel += 1;\r\n         if (this.playinglevel > this.level && this.challenge_level_unlocked == false) {\r\n            this.level = this.playinglevel;\r\n            if (this.level === (csv.Config.Chanllenge_Unlock_Level || 25)) {\r\n               vm.show(\"Prefabs/UI/UIUnlockMode\")\r\n               this.challenge_level_unlocked = true;\r\n               block = true;\r\n            }\r\n            csv.Skin.values.forEach(v => {\r\n               if (v.unlockType == 1 && !PlayerInfo.isSkinUnlocked(v.id) && this.level == v.unlock1) {\r\n                  // PlayerInfo.unlockSkin(v.id);\r\n                  vm.show(\"Prefabs/UI/UIUnlockSkin\", v.id);\r\n                  block = true;\r\n               }\r\n            });\r\n            let c = PlayerInfo.getChapter(this.level);\r\n            if (PlayerInfo.star >= csv.star.get(c).demand) {\r\n               let bNew = PlayerInfo.isChapterNew(c)\r\n               if (c > 1) {\r\n                  if (bNew) {\r\n                     vm.show(\"Prefabs/story/help\", c)\r\n                     block = true;\r\n                     PlayerInfo.markChapterOld(c);\r\n                  }\r\n               }\r\n            }\r\n            if (!window.tt) {\r\n               UserInfo.uploadUserInfo({ level: this.level, challengelevel: this.dailylevel });\r\n               this.upRank();\r\n            }\r\n\r\n         }\r\n      }\r\n      this.save();\r\n      return block;\r\n   }\r\n\r\n   // 比较当前日期和每日挑战表格里的日期 \r\n   isGreaterDate(date2) {\r\n      let oDate1: Date = this.lld\r\n      // oDate1 = new Date(\"2020/5/16\")\r\n      // console.log(\"当前日期\",oDate1);\r\n\r\n      var oDate2 = new Date(date2);\r\n      // console.log(\"表格日期\",oDate2);\r\n      if (oDate1.getTime() >= oDate2.getTime()) {\r\n         //  console.log(\"当前日期大于或等于表格日期\");\r\n         return true;\r\n      } else {\r\n         // console.log(\"当前日期小于表格日期\");\r\n         return false;\r\n      }\r\n\r\n   }\r\n\r\n   isNewLevel(date2) {\r\n      let oDate1: Date = this.lld\r\n      // oDate1 = new Date(\"2020/5/16\")\r\n      // console.log(\"当前日期\",oDate1.toDateString());\r\n      var oDate2 = new Date(date2);\r\n      // console.log(\"表格日期\",oDate2.toDateString());\r\n      if (oDate1.toDateString() == oDate2.toDateString()) {\r\n         // console.log(\"当前日期等于表格日期\");\r\n         return true;\r\n      } else {\r\n         // console.log(\"当前日期不等于于表格日期\");\r\n         return false;\r\n      }\r\n   }\r\n}\r\n\r\n\r\nexport let PlayerInfo: PlayerInfoDC = DataCenter.register(PlayerInfoDC);\r\n"]}