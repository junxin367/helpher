{"version":3,"sources":["assets\\framework\\core\\FSM.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport class State {\r\n    name: string;\r\n    id: number;\r\n\r\n    constructor(id?, name?) {\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n    onEnter(params?) { }\r\n    onExit() { }\r\n    onUpdate(dt) { }\r\n    //messages \r\n    on() { }\r\n    off() { }\r\n\r\n    __interval_callbacks = []\r\n\r\n    clearIntervals() {\r\n        this.__interval_callbacks.splice(0, this.__interval_callbacks.length)\r\n    }\r\n\r\n    interval_id: number = 0;\r\n\r\n    setInterval(interval, callback, target?) {\r\n        let id = ++this.interval_id;\r\n        let timer = 0;\r\n        this.__interval_callbacks.push({ id, callback, target, interval, timer });\r\n        return id;\r\n    }\r\n\r\n    clearInterval(id) {\r\n        this.__interval_callbacks.splice(this.__interval_callbacks.indexOf(id))\r\n    }\r\n\r\n\r\n    setTimeout(delay, callback, target?) {\r\n        let id = ++this.interval_id;\r\n        let timer = 0;\r\n        this.__interval_callbacks.push({ id, callback, target, delay, timer });\r\n        return id;\r\n    }\r\n\r\n    clearTimeout(id) {\r\n        this.clearInterval(id)\r\n    }\r\n\r\n    invokeIntervals(dt) {\r\n        for (let i = 0; i < this.__interval_callbacks.length; i++) {\r\n            const element = this.__interval_callbacks[i];\r\n            element.timer = element.timer + dt;\r\n            if (element.interval) {\r\n                if (element.timer >= element.interval) {\r\n                    element.timer = 0;\r\n                    // call\r\n                    element.callback.call(element.target)\r\n                }\r\n            } else if (element.delay) {\r\n                if (element.timer >= element.delay) {\r\n                    // call\r\n                    element.callback.call(element.target)\r\n                    this.__interval_callbacks.splice(i);\r\n                    i--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass CustomState extends State {\r\n    __enterFunc: Function;\r\n    __exitFunc: Function;\r\n    __updateFunc: Function;\r\n    __target: any;\r\n    constructor(target, id, name, pattern) {\r\n        super(id, name);\r\n        let enterName = cc.js.formatStr(pattern, \"onEnter\", this.name)\r\n        let updateName = cc.js.formatStr(pattern, \"onUpdate\", this.name)\r\n        let exitName = cc.js.formatStr(pattern, \"onExit\", this.name)\r\n        this.__target = target;\r\n        this.__enterFunc = this.__target[enterName];\r\n        this.__updateFunc = this.__target[updateName];\r\n        this.__exitFunc = this.__target[exitName];\r\n\r\n    }\r\n    onEnter(params) {\r\n        this.clearIntervals();\r\n        if (this.__enterFunc) {\r\n            this.__enterFunc.call(this.__target, this, params);\r\n        }\r\n    }\r\n    onExit() {\r\n        if (this.__exitFunc) {\r\n            this.__exitFunc.call(this.__target, this);\r\n        }\r\n    }\r\n    onUpdate(dt) {\r\n        this.invokeIntervals(dt);\r\n        if (this.__updateFunc) {\r\n            this.__updateFunc.call(this.__target, this, dt);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default class FSM extends cc.Component {\r\n    c: State;\r\n    p: State;\r\n    _target: any;\r\n\r\n    static debug = false;\r\n\r\n    timeElapsed: number = 0;\r\n\r\n    _states: { [index: number]: State } = {}\r\n\r\n    _isPaused = false;\r\n\r\n    namePattern: string;\r\n\r\n    _log: boolean = false;\r\n\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n\r\n    getState(stateId) {\r\n        return this._states[stateId];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this.c\r\n    }\r\n\r\n    getPreviousState() {\r\n        return this.p;\r\n    }\r\n\r\n    init(target: any, states?: any, params = '%s_%s') {\r\n\r\n        this._target = target;\r\n        this.timeElapsed = 0;\r\n        if (states)\r\n            this.addStates(states, params)\r\n    }\r\n\r\n\r\n    addStates(states: any, callbackNamePattern = \"%s_%sState\") {\r\n        let keys = Object.keys(states);\r\n        let enumLen = (keys.length / 2);\r\n        this.namePattern = callbackNamePattern;\r\n        for (var i = 0; i < enumLen; i++) {\r\n            let key = keys[i]\r\n            let value = states[key];\r\n\r\n            this.addState(key, value)\r\n        }\r\n    }\r\n\r\n    addState(id, name, enterCallback?, exitCallback?, updateCallback?, target?) {\r\n        if (this._log)\r\n            console.log(\"[FSM]\" + this.target.__classname__ + \"(\" + this.target.name + \")\" + \" Add State :\", id, name)\r\n        let state = new CustomState(this.target, id, name, this.namePattern);\r\n        this._states[id] = state;\r\n        if (enterCallback)\r\n            state.__enterFunc = enterCallback;\r\n        if (exitCallback)\r\n            state.__exitFunc = exitCallback;\r\n        if (updateCallback)\r\n            state.__updateFunc = updateCallback;\r\n        if (target)\r\n            state.__target = target;\r\n    }\r\n\r\n    /**\r\n     * first state \r\n     * @param: state index or State\r\n     */\r\n    enterState(stateId: number, params?) {\r\n        this.timeElapsed = 0\r\n        let state = this._states[stateId]\r\n        this.c = state;\r\n        state.onEnter(params);\r\n        if (this._log)\r\n            console.log(\"[FSM]\" + this.target.__classname__ + \" First State:\", state.name)\r\n    }\r\n\r\n    revertState() {\r\n        this.changeState(this.p.id);\r\n    }\r\n\r\n\r\n    pause() {\r\n        this._isPaused = true;\r\n    }\r\n\r\n    resume() {\r\n        this._isPaused = false;\r\n    }\r\n\r\n    resetCurrentState() {\r\n        this.timeElapsed = 0\r\n        console.log(cc.js.formatStr(\"[FSM] %s reset currentState\", this.target.__classname__))\r\n        this.c.onExit();\r\n        this.c.onEnter();\r\n    }\r\n\r\n    changeState(stateId: number, params?) {\r\n        let state = this._states[stateId]\r\n        if (state == null) {\r\n            console.warn(\"[FSM] invalid state for stateId \" + stateId + \" of : \" + this.target.__classname__)\r\n            return;\r\n        }\r\n        if (this._isPaused) {\r\n            console.warn(\"[FSM] fsm is paused ! \" + this.target.__classname__ + \" changeState to <\" + state.name + \"> failed!\")\r\n            return\r\n        }\r\n        if (this.c) {\r\n            if (stateId == this.c.id) {\r\n                if (this._log) console.log(this.target.__classname__ + \" already in state :\" + state.name)\r\n                return\r\n            };\r\n            this.c.onExit();\r\n            this.p = this.c;\r\n        }\r\n        this.timeElapsed = 0\r\n        this.c = state;\r\n        if (this._log)\r\n            console.log(cc.js.formatStr(\"[FSM] %s (%s): %s -> %s\", this.target.__classname__, this.name, this.p.name, state.name))\r\n        this.c.onEnter(params);\r\n\r\n    }\r\n\r\n    isInState(stateId) {\r\n        return this.c == this._states[stateId]\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isPaused) return;\r\n        if (FSM.debug)\r\n            dt = 0.016; // use real deta\r\n        this.timeElapsed += dt;\r\n        if (this.c)\r\n            this.c.onUpdate(dt);\r\n    }\r\n}"]}