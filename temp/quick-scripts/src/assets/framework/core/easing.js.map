{"version":3,"sources":["assets\\framework\\core\\easing.js"],"names":["easing","constant","linear","k","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","sineIn","Math","cos","PI","sineOut","sin","sineInOut","expoIn","pow","expoOut","expoInOut","circIn","sqrt","circOut","circInOut","elasticIn","s","a","p","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","smooth","t","fade","_makeOutIn","fnIn","fnOut","quadOutIn","cubicOutIn","quartOutIn","quintOutIn","sineOutIn","expoOutIn","circOutIn","backOutIn","bounceOutIn","cc"],"mappings":"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","sourceRoot":"/","sourcesContent":["var easing = {\r\n    constant: function () { return 0; },\r\n    linear: function (k) { return k; },\r\n\r\n    // quad\r\n    //  easing equation function for a quadratic (t^2)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in with quadratic formula. From slow to fast.\r\n     * !#zh 平方曲线缓入函数。运动由慢到快。\r\n     * @method quadIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value\r\n     */\r\n    quadIn: function (k) { return k * k; },\r\n    /**\r\n     * !#en Easing out with quadratic formula. From fast to slow.\r\n     * !#zh 平方曲线缓出函数。运动由快到慢。\r\n     * @method quadOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value\r\n     */\r\n    quadOut: function (k) { return k * (2 - k); },\r\n    /**\r\n     * !#en Easing in and out with quadratic formula. From slow to fast, then back to slow.\r\n     * !#zh 平方曲线缓入缓出函数。运动由慢到快再到慢。\r\n     * @method quadInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value\r\n     */\r\n    quadInOut: function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * k * k;\r\n        }\r\n        return -0.5 * (--k * (k - 2) - 1);\r\n    },\r\n\r\n    // cubic\r\n    //  easing equation function for a cubic (t^3)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in with cubic formula. From slow to fast.\r\n     * !#zh 立方曲线缓入函数。运动由慢到快。\r\n     * @method cubicIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    cubicIn: function (k) { return k * k * k; },\r\n    /**\r\n     * !#en Easing out with cubic formula. From slow to fast.\r\n     * !#zh 立方曲线缓出函数。运动由快到慢。\r\n     * @method cubicOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    cubicOut: function (k) { return --k * k * k + 1; },\r\n    /**\r\n     * !#en Easing in and out with cubic formula. From slow to fast, then back to slow.\r\n     * !#zh 立方曲线缓入缓出函数。运动由慢到快再到慢。\r\n     * @method cubicInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    cubicInOut: function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * k * k * k;\r\n        }\r\n        return 0.5 * ((k -= 2) * k * k + 2);\r\n    },\r\n\r\n    // quart\r\n    //  easing equation function for a quartic (t^4)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in with quartic formula. From slow to fast.\r\n     * !#zh 四次方曲线缓入函数。运动由慢到快。\r\n     * @method quartIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quartIn: function (k) { return k * k * k * k; },\r\n    /**\r\n     * !#en Easing out with quartic formula. From fast to slow.\r\n     * !#zh 四次方曲线缓出函数。运动由快到慢。\r\n     * @method quartOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quartOut: function (k) { return 1 - (--k * k * k * k); },\r\n    /**\r\n     * !#en Easing in and out with quartic formula. From slow to fast, then back to slow.\r\n     * !#zh 四次方曲线缓入缓出函数。运动由慢到快再到慢。\r\n     * @method quartInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quartInOut: function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * k * k * k * k;\r\n        }\r\n        return -0.5 * ((k -= 2) * k * k * k - 2);\r\n    },\r\n\r\n    // quint\r\n    //  easing equation function for a quintic (t^5)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in with quintic formula. From slow to fast.\r\n     * !#zh 五次方曲线缓入函数。运动由慢到快。\r\n     * @method quintIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quintIn: function (k) { return k * k * k * k * k; },\r\n    /**\r\n     * !#en Easing out with quintic formula. From fast to slow.\r\n     * !#zh 五次方曲线缓出函数。运动由快到慢。\r\n     * @method quintOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quintOut: function (k) { return --k * k * k * k * k + 1; },\r\n    /**\r\n     * !#en Easing in and out with quintic formula. From slow to fast, then back to slow.\r\n     * !#zh 五次方曲线缓入缓出函数。运动由慢到快再到慢。\r\n     * @method quintInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    quintInOut: function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * k * k * k * k * k;\r\n        }\r\n        return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n    },\r\n\r\n    // sine\r\n    //  easing equation function for a sinusoidal (sin(t))\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in and out with sine formula. From slow to fast.\r\n     * !#zh 正弦曲线缓入函数。运动由慢到快。\r\n     * @method sineIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    sineIn: function (k) { return 1 - Math.cos(k * Math.PI / 2); },\r\n    /**\r\n     * !#en Easing in and out with sine formula. From fast to slow.\r\n     * !#zh 正弦曲线缓出函数。运动由快到慢。\r\n     * @method sineOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    sineOut: function (k) { return Math.sin(k * Math.PI / 2); },\r\n    /**\r\n     * !#en Easing in and out with sine formula. From slow to fast, then back to slow.\r\n     * !#zh 正弦曲线缓入缓出函数。运动由慢到快再到慢。\r\n     * @method sineInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    sineInOut: function (k) { return 0.5 * (1 - Math.cos(Math.PI * k)); },\r\n\r\n    // expo\r\n    //  easing equation function for an exponential (2^t)\r\n    //  param t: Current time (in frames or seconds).\r\n    //  return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in and out with exponential formula. From slow to fast.\r\n     * !#zh 指数曲线缓入函数。运动由慢到快。\r\n     * @method expoIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    expoIn: function (k) { return k === 0 ? 0 : Math.pow(1024, k - 1); },\r\n    /**\r\n     * !#en Easing in and out with exponential formula. From fast to slow.\r\n     * !#zh 指数曲线缓出函数。运动由快到慢。\r\n     * @method expoOu\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    expoOut: function (k) { return k === 1 ? 1 : 1 - Math.pow(2, -10 * k); },\r\n    /**\r\n     * !#en Easing in and out with exponential formula. From slow to fast.\r\n     * !#zh 指数曲线缓入和缓出函数。运动由慢到很快再到慢。\r\n     * @method expoInOut\r\n     * @param {Number} t The current time as a percentage of the total time, then back to slow.\r\n     * @return The correct value.\r\n     */\r\n    expoInOut: function (k) {\r\n        if (k === 0) {\r\n            return 0;\r\n        }\r\n        if (k === 1) {\r\n            return 1;\r\n        }\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * Math.pow(1024, k - 1);\r\n        }\r\n        return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n    },\r\n\r\n    // circ\r\n    //  easing equation function for a circular (sqrt(1-t^2))\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return:\tThe correct value.\r\n\r\n    /**\r\n     * !#en Easing in and out with circular formula. From slow to fast.\r\n     * !#zh 循环公式缓入函数。运动由慢到快。\r\n     * @method circIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    circIn: function (k) { return 1 - Math.sqrt(1 - k * k); },\r\n    /**\r\n     * !#en Easing in and out with circular formula. From fast to slow.\r\n     * !#zh 循环公式缓出函数。运动由快到慢。\r\n     * @method circOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    circOut: function (k) { return Math.sqrt(1 - (--k * k)); },\r\n    /**\r\n     * !#en Easing in and out with circular formula. From slow to fast.\r\n     * !#zh 指数曲线缓入缓出函数。运动由慢到很快再到慢。\r\n     * @method circInOut\r\n     * @param {Number} t The current time as a percentage of the total time, then back to slow.\r\n     * @return The correct value.\r\n     */\r\n    circInOut: function (k) {\r\n        if ((k *= 2) < 1) {\r\n            return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n        }\r\n        return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n    },\r\n\r\n    // elastic\r\n    //  easing equation function for an elastic (exponentially decaying sine wave)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n    //  recommand value: elastic (t)\r\n\r\n    /**\r\n     * !#en Easing in action with a spring oscillating effect.\r\n     * !#zh 弹簧回震效果的缓入函数。\r\n     * @method elasticIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    elasticIn: function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if (k === 0) {\r\n            return 0;\r\n        }\r\n        if (k === 1) {\r\n            return 1;\r\n        }\r\n        if (!a || a < 1) {\r\n            a = 1;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n        }\r\n        return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n    },\r\n    /**\r\n     * !#en Easing out action with a spring oscillating effect.\r\n     * !#zh 弹簧回震效果的缓出函数。\r\n     * @method elasticOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    elasticOut: function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if (k === 0) {\r\n            return 0;\r\n        }\r\n        if (k === 1) {\r\n            return 1;\r\n        }\r\n        if (!a || a < 1) {\r\n            a = 1;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n        }\r\n        return (a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n    },\r\n    /**\r\n     * !#en Easing in and out action with a spring oscillating effect.\r\n     * !#zh 弹簧回震效果的缓入缓出函数。\r\n     * @method elasticInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    elasticInOut: function (k) {\r\n        var s, a = 0.1, p = 0.4;\r\n        if (k === 0) {\r\n            return 0;\r\n        }\r\n        if (k === 1) {\r\n            return 1;\r\n        }\r\n        if (!a || a < 1) {\r\n            a = 1;\r\n            s = p / 4;\r\n        }\r\n        else {\r\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n        }\r\n        if ((k *= 2) < 1) {\r\n            return -0.5 *\r\n                (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n        }\r\n        return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n    },\r\n\r\n    // back\r\n    //  easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in action with \"back up\" behavior.\r\n     * !#zh 回退效果的缓入函数。\r\n     * @method backIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    backIn: function (k) {\r\n        var s = 1.70158;\r\n        return k * k * ((s + 1) * k - s);\r\n    },\r\n    /**\r\n     * !#en Easing out action with \"back up\" behavior.\r\n     * !#zh 回退效果的缓出函数。\r\n     * @method backOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    backOut: function (k) {\r\n        var s = 1.70158;\r\n        return --k * k * ((s + 1) * k + s) + 1;\r\n    },\r\n    /**\r\n     * !#en Easing in and out action with \"back up\" behavior.\r\n     * !#zh 回退效果的缓入缓出函数。\r\n     * @method backInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    backInOut: function (k) {\r\n        var s = 1.70158 * 1.525;\r\n        if ((k *= 2) < 1) {\r\n            return 0.5 * (k * k * ((s + 1) * k - s));\r\n        }\r\n        return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n    },\r\n\r\n    // bounce\r\n    //  easing equation function for a bounce (exponentially decaying parabolic bounce)\r\n    //  @param t: Current time (in frames or seconds).\r\n    //  @return: The correct value.\r\n\r\n    /**\r\n     * !#en Easing in action with bouncing effect.\r\n     * !#zh 弹跳效果的缓入函数。\r\n     * @method bounceIn\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    bounceIn: function (k) {\r\n        return 1 - easing.bounceOut(1 - k);\r\n    },\r\n    /**\r\n     * !#en Easing out action with bouncing effect.\r\n     * !#zh 弹跳效果的缓出函数。\r\n     * @method bounceOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    bounceOut: function (k) {\r\n        if (k < (1 / 2.75)) {\r\n            return 7.5625 * k * k;\r\n        }\r\n        else if (k < (2 / 2.75)) {\r\n            return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n        }\r\n        else if (k < (2.5 / 2.75)) {\r\n            return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n        }\r\n        else {\r\n            return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n        }\r\n    },\r\n    /**\r\n     * !#en Easing in and out action with bouncing effect.\r\n     * !#zh 弹跳效果的缓入缓出函数。\r\n     * @method bounceInOut\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    bounceInOut: function (k) {\r\n        if (k < 0.5) {\r\n            return easing.bounceIn(k * 2) * 0.5;\r\n        }\r\n        return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n    },\r\n\r\n    /**\r\n     * !#en Target will run action with smooth effect.\r\n     * !#zh 平滑效果函数。\r\n     * @method smooth\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    // t<=0: 0 | 0<t<1: 3*t^2 - 2*t^3 | t>=1: 1\r\n    smooth: function (t) {\r\n        if (t <= 0) {\r\n            return 0;\r\n        }\r\n        if (t >= 1) {\r\n            return 1;\r\n        }\r\n        return t * t * (3 - 2 * t);\r\n    },\r\n\r\n    /**\r\n     * !#en Target will run action with fade effect.\r\n     * !#zh 渐褪效果函数。\r\n     * @method fade\r\n     * @param {Number} t The current time as a percentage of the total time.\r\n     * @return The correct value.\r\n     */\r\n    // t<=0: 0 | 0<t<1: 6*t^5 - 15*t^4 + 10*t^3 | t>=1: 1\r\n    fade: function (t) {\r\n        if (t <= 0) {\r\n            return 0;\r\n        }\r\n        if (t >= 1) {\r\n            return 1;\r\n        }\r\n        return t * t * t * (t * (t * 6 - 15) + 10);\r\n    },\r\n};\r\n\r\nfunction _makeOutIn(fnIn, fnOut) {\r\n    return function (k) {\r\n        if (k < 0.5) {\r\n            return fnOut(k * 2) / 2;\r\n        }\r\n        return fnIn(2 * k - 1) / 2 + 0.5;\r\n    };\r\n}\r\neasing.quadOutIn = _makeOutIn(easing.quadIn, easing.quadOut);\r\neasing.cubicOutIn = _makeOutIn(easing.cubicIn, easing.cubicOut);\r\neasing.quartOutIn = _makeOutIn(easing.quartIn, easing.quartOut);\r\neasing.quintOutIn = _makeOutIn(easing.quintIn, easing.quintOut);\r\neasing.sineOutIn = _makeOutIn(easing.sineIn, easing.sineOut);\r\neasing.expoOutIn = _makeOutIn(easing.expoIn, easing.expoOut);\r\neasing.circOutIn = _makeOutIn(easing.circIn, easing.circOut);\r\neasing.backOutIn = _makeOutIn(easing.backIn, easing.backOut);\r\neasing.bounceIn = function (k) { return 1 - easing.bounceOut(1 - k); };\r\neasing.bounceInOut = function (k) {\r\n    if (k < 0.5) {\r\n        return easing.bounceIn(k * 2) * 0.5;\r\n    }\r\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n};\r\neasing.bounceOutIn = _makeOutIn(easing.bounceIn, easing.bounceOut);\r\n\r\n/**\r\n * @module cc\r\n */\r\n\r\n/**\r\n * !#en This is a Easing instance.\r\n * !#zh 这是一个 Easing 类实例。\r\n * @property easing\r\n * @type Easing\r\n */\r\n\r\ncc.easing =  easing;"]}