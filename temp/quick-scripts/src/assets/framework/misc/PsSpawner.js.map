{"version":3,"sources":["assets\\framework\\misc\\PsSpawner.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAA0B;AAC1B,mDAA8C;AAExC,IAAA,KAA8B,EAAE,CAAC,UAAU,EAAzC,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAkB,CAAC;AAIlD;IAAuC,6BAAY;IAAnD;;IA+FA,CAAC;IA1FG,0BAAM,GAAN;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,qBAAW,EAAE,CAAC;IACrC,CAAC;IAED,yBAAK,GAAL;IAEA,CAAC;IAED,yBAAK,GAAL;QACI,IAAI,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAED,yBAAK,GAAL,UAAM,UAAU;QAAhB,iBAwBC;QAvBG,OAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;YACrC,IAAI,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;YACvC,IAAI,IAAI,IAAI,IAAI,EAAE;gBACd,IAAI,UAAU,YAAY,EAAE,CAAC,MAAM,EAAE;oBACjC,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;oBAClC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;iBACrC;qBAAM;oBACH,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC,MAAM,EAAE,UAAC,CAAC,EAAE,MAAiB;wBAC1D,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;wBAC9B,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;wBAC1B,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAI,CAAC,CAAA;wBACvC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;wBACvB,OAAO,CAAC,IAAI,CAAC,CAAC;oBAClB,CAAC,CAAC,CAAA;oBACF,OAAO;iBACV;aACJ;YACD,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,cAAI,CAAC,CAAA;YACvC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAA;IACN,CAAC;IAED,2BAAO,GAAP,UAAQ,UAAU,EAAE,GAAG;QAAvB,iBAMC;QALG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAA,EAAE;gBAC1B,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,iCAAa,GAAb,UAAc,EAAQ;QAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,0BAAM,GAAN,UAAO,EAAQ;QACX,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEK,wBAAI,GAAV,UAAW,UAAU,EAAE,GAAkB,EAAE,QAAY,EAAE,KAAM,EAAE,WAAY;QAAtD,oBAAA,EAAA,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI;QAAE,yBAAA,EAAA,YAAY;;;;;4BAC1C,qBAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAA;;wBAAjC,EAAE,GAAG,SAA4B;wBACrC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;wBACvB,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;wBACzB,qBAAM,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,EAAA;;wBAAjC,SAAiC,CAAA;wBACjC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;;;KAC1B;IAEK,qCAAiB,GAAvB,UAAwB,UAAU,EAAE,GAAkB,EAAE,QAAY,EAAE,KAAM,EAAE,WAAY;QAAtD,oBAAA,EAAA,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI;QAAE,yBAAA,EAAA,YAAY;;;;;4BACvD,qBAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAA;;wBAAjC,EAAE,GAAG,SAA4B;wBACrC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;wBACvB,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;wBACzB,qBAAM,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;4BACjC,yBAAyB;0BADQ;;wBAAjC,SAAiC,CAAA;;;;;KAEpC;IAEK,yBAAK,GAAX,UAAY,UAAU,EAAE,GAAkB,EAAE,QAAY,EAAE,KAAS;QAA3C,oBAAA,EAAA,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI;QAAE,yBAAA,EAAA,YAAY;QAAE,sBAAA,EAAA,SAAS;;;;;4BACtD,qBAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAA;;wBAAjC,EAAE,GAAG,SAA4B;wBACrC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;wBACvB,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACtB,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;wBACzB,qBAAM,EAAE,CAAC,IAAI,EAAE,EAAA;;wBAAf,SAAe,CAAA;wBACf,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;;;;;KAC1B;IAEK,yBAAK,GAAX,UAAY,UAAU,EAAE,GAAkB;QAAlB,oBAAA,EAAA,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI;;;;;;4BAC7B,qBAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAA;;wBAAjC,EAAE,GAAG,SAA4B;wBACrC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;wBACvB,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,aAAa,CAAC,EAAE,CAAC,EAAtB,CAAsB,CAAC,CAAC;wBAC5C,sBAAO,EAAE,EAAC;;;;KACb;IA1FgB,SAAS;QAF7B,OAAO;QACP,IAAI,CAAC,gBAAgB,CAAC;OACF,SAAS,CA+F7B;IAAD,gBAAC;CA/FD,AA+FC,CA/FsC,EAAE,CAAC,SAAS,GA+FlD;kBA/FoB,SAAS","file":"","sourceRoot":"/","sourcesContent":["import PsFx from \"./PsFx\";\r\nimport PoolManager from \"../core/PoolManager\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"动画特效/PsSpawner\")\r\nexport default class PsSpawner extends cc.Component {\r\n\r\n    static instance: PsSpawner;\r\n\r\n    poolmgr: PoolManager;\r\n    onLoad() {\r\n        this.poolmgr = new PoolManager();\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    clear() {\r\n        if (this.poolmgr)\r\n            this.poolmgr.clear();\r\n    }\r\n\r\n    getFx(prefabPath): Promise<PsFx> {\r\n        return new Promise<PsFx>((resolve, reject) => {\r\n            let node = this.poolmgr.get(prefabPath)\r\n            if (node == null) {\r\n                if (prefabPath instanceof cc.Prefab) {\r\n                    node = cc.instantiate(prefabPath);\r\n                    this.poolmgr.tag(node, prefabPath)\r\n                } else {\r\n                    cc.resources.load(prefabPath, cc.Prefab, (e, prefab: cc.Prefab) => {\r\n                        node = cc.instantiate(prefab);\r\n                        node.setParent(this.node);\r\n                        let psfx = node.getOrAddComponent(PsFx)\r\n                        psfx.name = prefabPath;\r\n                        resolve(psfx);\r\n                    })\r\n                    return;\r\n                }\r\n            }\r\n            node.setParent(this.node);\r\n            node.active = false;\r\n            let psfx = node.getOrAddComponent(PsFx)\r\n            psfx.reset();\r\n            resolve(psfx);\r\n        })\r\n    }\r\n\r\n    preload(prefabPath, num) {\r\n        for (var i = 0; i < num; i++) {\r\n            this.getFx(prefabPath).then(fx => {\r\n                this.onFxFinshPlay(fx);\r\n            });\r\n        }\r\n    }\r\n\r\n    onFxFinshPlay(fx: PsFx) {\r\n        this.poolmgr.put(fx.node);\r\n    }\r\n\r\n    finish(fx: PsFx) {\r\n        this.poolmgr.put(fx.node);\r\n    }\r\n\r\n    async play(prefabPath, pos = cc.Vec2.ZERO, rotation = 0, audio?, spriteframe?) {\r\n        let fx = await this.getFx(prefabPath);\r\n        fx.node.position = pos;\r\n        fx.node.angle = rotation;\r\n        await fx.play(audio, spriteframe)\r\n        this.onFxFinshPlay(fx);\r\n    }\r\n\r\n    async playWithoutFinish(prefabPath, pos = cc.Vec2.ZERO, rotation = 0, audio?, spriteframe?) {\r\n        let fx = await this.getFx(prefabPath);\r\n        fx.node.position = pos;\r\n        fx.node.angle = rotation;\r\n        await fx.play(audio, spriteframe)\r\n        //this.onFxFinshPlay(fx);\r\n    }\r\n\r\n    async play2(prefabPath, pos = cc.Vec2.ZERO, rotation = 0, scale = 0) {\r\n        let fx = await this.getFx(prefabPath);\r\n        fx.node.position = pos;\r\n        fx.node.scale = scale;\r\n        fx.node.angle = rotation;\r\n        await fx.play()\r\n        this.onFxFinshPlay(fx);\r\n    }\r\n\r\n    async play3(prefabPath, pos = cc.Vec2.ZERO) {\r\n        let fx = await this.getFx(prefabPath);\r\n        fx.node.position = pos;\r\n        fx.play().then(_ => this.onFxFinshPlay(fx));\r\n        return fx;\r\n    }\r\n\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n"]}