{"version":3,"sources":["assets\\framework\\misc\\NumTrigger.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAM,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAE1C;IAMI,sBAAY,GAAG,EAAC,GAAG,EAAC,QAAQ;QAL5B,QAAG,GAAU,MAAM,CAAC,SAAS,CAAC;QAC9B,QAAG,GAAU,MAAM,CAAC,SAAS,CAAC;QAE9B,OAAE,GAAU,CAAC,CAAC;QACd,cAAS,GAAW,KAAK,CAAC;QAEtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IACL,mBAAC;AAAD,CAXA,AAWC,IAAA;AAED,IAAY,YAGX;AAHD,WAAY,YAAY;IACpB,+CAAQ,CAAA;IACR,0DAAc,CAAA;AAClB,CAAC,EAHW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAGvB;AAGD;IAAA;QAEI,WAAM,GAAkB,EAAE,CAAA;QAS1B,gBAAW,GAAgB,YAAY,CAAC,IAAI,CAAC;IA2BjD,CAAC;IAlCG,wBAAG,GAAH,UAAI,GAAG,EAAC,GAAG,EAAC,QAAQ;QAEhB,IAAI,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,QAAQ,CAAC,CAAC;QAC3C,uBAAuB;QACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;IAID,0BAAK,GAAL;QAEI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,CAAC,IAAE,OAAA,CAAC,CAAC,SAAS,GAAG,KAAK,EAAnB,CAAmB,CAAC,CAAA;IAC/C,CAAC;IAEO,4BAAO,GAAf,UAAgB,CAAC,EAAC,CAAc;QAE5B,IAAG,CAAC,CAAC,SAAS;YACV,OAAO,KAAK,CAAC;QACjB,IAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAG,CAAC,CAAC,GAAG,EAC1B;YACI,IAAG,IAAI,CAAC,WAAW,IAAI,YAAY,CAAC,SAAS,EAAC;gBAC1C,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;YACD,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,QAAQ,EAAE,CAAA;YACZ,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,2BAAM,GAAN,UAAO,CAAC;QAAR,iBAGC;QADG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAE,OAAA,KAAI,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,CAAC,EAAjB,CAAiB,CAAC,CAAA;IAC1C,CAAC;IArCgB,UAAU;QAD9B,OAAO;OACa,UAAU,CAsC9B;IAAD,iBAAC;CAtCD,AAsCC,IAAA;kBAtCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\r\n\r\nclass TriggerPoint {\r\n    min:number = Number.MIN_VALUE;\r\n    max:number = Number.MAX_VALUE;\r\n    callback:Function;\r\n    id:number = 0;\r\n    triggered:boolean = false;\r\n    constructor(min,max,callback){\r\n        this.min = min;\r\n        this.max = max;\r\n        this.callback = callback;\r\n    }\r\n}\r\n\r\nexport enum TriggerTimes{\r\n    ONCE = 1 ,\r\n    UNLIMITED = -1,\r\n}\r\n\r\n@ccclass\r\nexport default class NumTrigger  {\r\n\r\n    points:TriggerPoint[] = []\r\n    \r\n    add(min,max,callback)\r\n    {\r\n        let a = new TriggerPoint(min,max,callback);\r\n        // TODO:是否和已有的point 有交集\r\n        this.points.push(a);\r\n    }\r\n\r\n    triggerType:TriggerTimes = TriggerTimes.ONCE;\r\n\r\n    reset()\r\n    {\r\n        this.points.forEach(v=>v.triggered = false)\r\n    }\r\n\r\n    private trigger(v,p:TriggerPoint)\r\n    {\r\n        if(p.triggered)\r\n            return false;\r\n        if(v >= p.min && v <=p.max)\r\n        {\r\n            if(this.triggerType == TriggerTimes.UNLIMITED){\r\n                this.reset();\r\n            }\r\n            p.triggered = true;\r\n            p.callback()\r\n            return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    update(v)\r\n    {\r\n        this.points.some(p=>this.trigger(v,p))\r\n    }\r\n}"]}