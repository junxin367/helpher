{"version":3,"sources":["assets\\framework\\misc\\ParallaxNode.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import ccUtil from \"../utils/ccUtil\";\r\nconst { ccclass, property,menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"其它/ParallaxNode\")\r\nexport default class ParallaxNode extends cc.Component {\r\n\r\n    @property\r\n    offset: cc.Vec2 = cc.v2(1,1);\r\n    \r\n    @property(cc.Node)\r\n    refrenceNode:cc.Node = null;\r\n\r\n    refrecenOffset:cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    size:cc.Size = cc.winSize;\r\n\r\n    @property\r\n    horizontal_repeat:boolean = true\r\n\r\n    @property\r\n    vertical_repeat:boolean = false\r\n\r\n    @property\r\n    inverted:boolean = false;\r\n\r\n    dir:number = 1;\r\n\r\n    onLoad() {\r\n        this.dir = this.inverted ? -1:1; \r\n    }\r\n    //需要在将需要 复制的层放在组件所在节点的子节点下\r\n    // 且该节点只能放在摄像机下 面  作为子节点 \r\n    //camera ->this -> content\r\n    start() {\r\n        this.refrecenOffset = this.refrenceNode.position;\r\n        //copy three children\r\n        let child = this.node.children[0]\r\n        this.size = child.getContentSize();\r\n        if(this.horizontal_repeat)\r\n        {\r\n            let c1 = cc.instantiate(child)\r\n            let c2 = cc.instantiate(child)\r\n            c1.parent = this.node;\r\n            c2.parent = this.node;\r\n            c1.x = -child.width;\r\n            c2.x = child.width;\r\n        }else if(this.vertical_repeat)\r\n        {\r\n            let c1 = cc.instantiate(child)\r\n            let c2 = cc.instantiate(child)\r\n            c1.parent = this.node;\r\n            c2.parent = this.node;\r\n            c1.y = -child.height;\r\n            c2.y = child.height;\r\n        }\r\n        \r\n    }\r\n\r\n    setBackground(backgroundUrl: string) {\r\n        this.node.children.forEach(v => {\r\n            let sp = v.getComponent(cc.Sprite);\r\n            ccUtil.setDisplay(sp,backgroundUrl)\r\n        });\r\n    }\r\n\r\n    update(){\r\n        if(this.horizontal_repeat){\r\n            this.node.x = this.dir * (this.refrenceNode.x - this.refrecenOffset.x) * this.offset.x;\r\n            this.node.x = this.node.x % this.size.width\r\n        }\r\n        else if(this.vertical_repeat){\r\n            this.node.y = this.dir *(this.refrenceNode.y - this.refrecenOffset.y) * this.offset.y;\r\n            this.node.y = this.node.y % this.size.height\r\n        }\r\n        // this.node.y = this.node.y % this.size.height\r\n    }\r\n}"]}