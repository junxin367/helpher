{"version":3,"sources":["assets\\framework\\extension\\movement\\MoveEngine.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import MoveBase from \"./SMoveBase\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\nexport enum Behavior {\r\n    Simple, // just move with velocity\r\n    FixedPosition, // move to target once \r\n    Seek,   //seek to target\r\n    Arrive,//arrive to target\r\n    Wander, // wander \r\n    Bezeir, //move with bezier path :Todo\r\n    Path,//move with custom path; :Todo:\r\n}\r\n\r\nenum ActivateType {\r\n    Load,\r\n    FirstShow,\r\n    Delay\r\n}\r\nconst WANDER_CIRCLE_DIST = 0;\r\nconst WANDER_CIRCLE_RADIUS = 1;\r\nconst WANDER_ANGLE_CHANGE = 1;\r\n@ccclass\r\n@menu('movement/MoveEngine')\r\nexport default class MoveEngine extends MoveBase {\r\n\r\n    static Behavior: typeof Behavior = Behavior;\r\n\r\n    @property({ type: cc.Enum(Behavior) })\r\n    moveType: Behavior = Behavior.Simple;\r\n\r\n    @property\r\n    maxSpeed: number = 15;\r\n    @property\r\n    forceWeight: number = 0.1;\r\n\r\n    acc: cc.Vec2 = cc.Vec2.ZERO\r\n    gravity: cc.Vec2 = new cc.Vec2(0, 0);\r\n    //---------------------------------------path relative-------------------------------------\r\n    @property({ type: [cc.Vec2], visible: function () { return this.moveType == Behavior.Path } })\r\n    path: cc.Vec2[] = []\r\n    _runningPath: cc.Vec2[] = [];\r\n    @property({ visible: function () { return this.moveType == Behavior.Path } })\r\n    pathRadius: number = 10;\r\n    @property({ visible: function () { return this.moveType == Behavior.Path } })\r\n    isPathLoop: boolean = true;\r\n    // @property\r\n    // resetPathWhenFinish = false;\r\n    _currentPathIndex: number = 0;\r\n    //------------------------------------------------------------------------------\r\n\r\n    wanderAngle: number = 0;\r\n\r\n\r\n    onLoad() {\r\n    }\r\n\r\n    start() {\r\n        if (this.rotateByVelocity) {\r\n            this.node.angle = -(this.rotationOffset + this.velocity.signAngle(cc.Vec2.RIGHT) * cc.macro.DEG);\r\n        }\r\n        this.setPath(this.path, this.isPathLoop, true);\r\n    }\r\n\r\n    setPath(path: cc.Vec2[], isLoop: boolean = false, isRelativePath: boolean = true) {\r\n        this.isPathLoop = isLoop;\r\n        this._runningPath.splice(0, this._runningPath.length);\r\n        for (var i = 0; i < path.length; i++) {\r\n            let pos = path[i].clone();\r\n            if (isRelativePath) {\r\n                pos.addSelf(this.node.position)\r\n            }\r\n            this._runningPath.push(pos);\r\n        }\r\n        if (this.isPathLoop) {\r\n            if (this._runningPath.length > 0) {\r\n                let pathWayPoint = this._runningPath[0]\r\n                this._runningPath.push(pathWayPoint);\r\n            }\r\n        }\r\n        this._currentPathIndex = 0;\r\n    }\r\n\r\n    resetPath() {\r\n        this.setPath(this.path, this.isPathLoop, true);\r\n    }\r\n\r\n    reset() {\r\n        this.target = null;\r\n        this.velocity = cc.Vec2.ZERO;\r\n        this.resetPath();\r\n    }\r\n\r\n    // onBeforeUpdate(callback, target, duration = -1) {\r\n    //     this.addCommand(callback, target, duration)\r\n    // }\r\n\r\n    changeBeheavior(behavior: Behavior, target: cc.Node = null) {\r\n        this.moveType = behavior;\r\n        if (target)\r\n            this.target = target;\r\n    }\r\n\r\n\r\n    applyForce(v2Orx: cc.Vec2 | number, y?: number) {\r\n        let x = v2Orx;\r\n        if (v2Orx instanceof cc.Vec2) {\r\n            x = v2Orx.x;\r\n            y = v2Orx.y;\r\n        }\r\n        //@ts-ignore\r\n        this.acc.x += x;\r\n        this.acc.y += y;\r\n    }\r\n\r\n\r\n    getNormalPoint(point, a, b): cc.Vec2 {\r\n        let ab = b.sub(a);\r\n        let ap = point.sub(a);\r\n        // ab.normalizeSelf()\r\n        // let ap_ab = ab.mul(ap.dot(ab))\r\n        let ap_ab = ap.project(ab)\r\n        return a.add(ap_ab);\r\n    }\r\n\r\n\r\n    static ReachPathEndThreshold = 400; //20 x 20\r\n    static PathPredictLength = 25;\r\n\r\n\r\n    drawPath(context) {\r\n        // context.clear();\r\n        context.moveTo(this._runningPath[0].x, this._runningPath[0].y);\r\n        for (var i = 0; i < this._runningPath.length - 1; i++) {\r\n            let a = this._runningPath[i];\r\n            let b = this._runningPath[i + 1]\r\n            context.lineTo(b.x, b.y);\r\n        }\r\n        // Game.instance.graphics.ellipse(target.x,target.y ,4,4)\r\n        context.stroke();\r\n    }\r\n\r\n    followPath(path: cc.Vec2[], pathRadius: number) {\r\n        if (this._currentPathIndex == path.length - 1) {\r\n            // let distsq = this.node.position.sub(this._runningPath[this._currentPathIndex]).magSqr();\r\n            // if(distsq < MoveEntity.ReachPathEndThreshold)\r\n            // {\r\n            // console.log(\"resetpath wehne finei\");\r\n            // if (this.resetPathWhenFinish)\r\n            // {\r\n            //     this.resetPath();\r\n            // }\r\n            // }\r\n            return cc.Vec2.ZERO;\r\n        }\r\n        // this.drawPath(Game.instance.graphics);\r\n        let predict = this.velocity.clone();\r\n        predict.normalizeSelf();\r\n        predict.mulSelf(MoveEngine.PathPredictLength);\r\n        predict.addSelf(this.node.position);//predictLocation\r\n        let target: cc.Vec2;\r\n        // for (var i = 0 ;i < 2; i++)\r\n        // {\r\n        let a = path[this._currentPathIndex];\r\n        let b = path[this._currentPathIndex + 1]\r\n\r\n        let normalpoint = this.getNormalPoint(predict, a, b);\r\n        let distsq = normalpoint.sub(b).magSqr();\r\n        if (distsq < MoveEngine.ReachPathEndThreshold) {\r\n            this._currentPathIndex += 1;\r\n            if (this.isPathLoop && this._currentPathIndex >= path.length - 1) {\r\n                this._currentPathIndex = 0;\r\n            }\r\n        }\r\n        target = (normalpoint).addSelf(b.sub(a).normalizeSelf().mulSelf(MoveEngine.PathPredictLength + 10))\r\n\r\n        if (distsq > pathRadius * pathRadius) {\r\n            return this.seek(target);\r\n        }\r\n        return cc.Vec2.ZERO;\r\n    }\r\n\r\n    _tmp_vec2: cc.Vec2 = cc.v2()\r\n\r\n    seek(position): cc.Vec2 {\r\n        let v = this._tmp_vec2;\r\n        // cc.Vec2.set(v, position.x, position.y)\r\n        v.x = position.x;\r\n        v.y = position.y;\r\n        v.subSelf(this.node.position);\r\n        v.normalizeSelf();\r\n        v.mulSelf(this.maxSpeed);\r\n        v.subSelf(this.velocity);\r\n        // this.limitVec2(v,this.maxSpeed);\r\n        return v;\r\n    }\r\n\r\n    arrive(position): cc.Vec2 {\r\n        let v = position.clone();\r\n        v.subSelf(this.node.position);\r\n        let d = v.mag();\r\n        v.normalizeSelf();\r\n        if (d < 100) {\r\n            let m = this.map(d, 0, 100, 0, this.maxSpeed);\r\n            v.mulSelf(m);\r\n        } else {\r\n            v.mulSelf(this.maxSpeed);\r\n        }\r\n        v.subSelf(this.velocity);\r\n        //limit maxforce \r\n        return v;\r\n    }\r\n\r\n    wander() {\r\n        let center = this.node.position;\r\n        let size = this.node.parent.getContentSize();\r\n        if (center.x < -size.width / 2 || center.y < -size.height / 2 || center.x > size.width / 2 || center.y > size.height / 2) {\r\n            return this.seek(cc.v2(0, 0));\r\n        }\r\n        let circleCenter: cc.Vec2 = this.velocity.clone();\r\n        circleCenter.normalize();\r\n        circleCenter.mulSelf(WANDER_CIRCLE_DIST)\r\n        let displacement: cc.Vec2 = cc.v2(-1, 0);\r\n        displacement.mulSelf(WANDER_CIRCLE_RADIUS);\r\n        displacement.rotateSelf(this.wanderAngle);\r\n        this.wanderAngle += g.randomFloat(-WANDER_ANGLE_CHANGE, WANDER_ANGLE_CHANGE)\r\n        return circleCenter.add(displacement);\r\n    }\r\n\r\n    private _applyForces() {\r\n        let f = cc.Vec2.ZERO\r\n        let pos = this.tarPos;\r\n        //@ts-ignore\r\n        if (this.target && this.target.activeInHierarchy) {\r\n            //@ts-ignore\r\n            pos = this.target.position\r\n        }\r\n        if (this.moveType == Behavior.Seek) {\r\n            f.addSelf(this.seek(pos))\r\n        } else if (this.moveType == Behavior.Arrive) {\r\n            f.addSelf(this.arrive(pos));\r\n        }\r\n        if (this.moveType == Behavior.Path && this._runningPath.length > 0) {\r\n            f.addSelf(this.followPath(this._runningPath, this.pathRadius));\r\n        } else if (this.moveType == Behavior.Wander) {\r\n            f.addSelf(this.wander());\r\n        }\r\n        this.applyForce(this.gravity.x, this.gravity.y);\r\n        this.applyForce(f.x, f.y);\r\n    }\r\n\r\n    private limitVec2(vec: cc.Vec2, max) {\r\n        let vec_length_sq = vec.magSqr();\r\n        if (vec_length_sq > max * max) {\r\n            vec.mulSelf(max / Math.sqrt(vec_length_sq)); //normal and mult\r\n        }\r\n        return vec_length_sq;\r\n    }\r\n\r\n    private map(val, s1, s2, e1, e2) {\r\n        let newVal = (e2 - e1) * val / (s2 - s1) + e1;\r\n        return Math.max(e1, Math.min(newVal, e2));\r\n    }\r\n\r\n    _step(dt?) {\r\n\r\n        this._applyForces();\r\n        let v = this.acc.mul(this.forceWeight)\r\n        this.velocity.addSelf(v)\r\n        this.limitVec2(this.velocity, this.maxSpeed);\r\n        // let speed = this.velocity.mag();\r\n        // this.velocity.normalizeSelf();\r\n        // this.velocity.mulSelf(Math.min(this.maxSpeed,speed));\r\n        // this.velocity.mulSelf(0.98);\r\n\r\n        this.node.setPosition(this.node.position.add(this.velocity));\r\n        this.acc.set(cc.Vec2.ZERO);\r\n        if (this.rotateByVelocity) {\r\n            if (this.moveType != Behavior.Simple)\r\n                this.node.angle = -(this.rotationOffset + this.velocity.signAngle(cc.Vec2.RIGHT) * cc.macro.DEG);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n"]}