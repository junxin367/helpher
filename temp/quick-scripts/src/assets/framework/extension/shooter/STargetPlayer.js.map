{"version":3,"sources":["assets\\framework\\extension\\shooter\\STargetPlayer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qDAAgD;AAChD,+CAA0C;AAEpC,IAAA,KAAuC,EAAE,CAAC,UAAU,EAAnD,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAC,gBAAgB,sBAAiB,CAAC;AAI3D;IAA2C,iCAAY;IAAvD;QAAA,qEAiEC;QA9DG,uBAAiB,GAAW,KAAK,CAAC;QAGlC,oBAAc,GAAU,CAAC,CAAC;QAK1B,cAAQ,GAAU,CAAC,CAAC;QAEpB,aAAO,GAAW,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;;QAmD/B,iBAAiB;IACrB,CAAC;IAhDG,6BAAK,GAAL;IAEA,CAAC;IAED,8BAAM,GAAN;QAEI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAU,CAAC,CAAC;IACpD,CAAC;IACD,gCAAQ,GAAR;QAEI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,sBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IACD,iCAAS,GAAT;QAEI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IAED,qCAAa,GAAb;QAEI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,IAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAC5E,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,gHAAgH;IACpH,CAAC;IAED,8BAAM,GAAN;QAEI,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,oCAAoC;QACpC,IAAI;QACJ,4CAA4C;QAC5C,IAAI;QACJ,IAAG,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,EAAE;YAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;YACxC,OAAQ;SACX;QACD,IAAG,IAAI,CAAC,iBAAiB,EACzB;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAI,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;SAChG;IACL,CAAC;IAzDD;QADC,QAAQ;4DACyB;IAGlC;QADC,QAAQ;yDACiB;IAK1B;QADC,QAAQ;mDACW;IAXH,aAAa;QAFjC,OAAO;QACP,gBAAgB,CAAC,oBAAU,CAAC;OACR,aAAa,CAiEjC;IAAD,oBAAC;CAjED,AAiEC,CAjE0C,EAAE,CAAC,SAAS,GAiEtD;kBAjEoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import MoveEngine from \"../movement/MoveEngine\";\r\nimport ShootManager from \"./ShootManager\";\r\n\r\nconst {ccclass, property,requireComponent} = cc._decorator;\r\n\r\n@ccclass\r\n@requireComponent(MoveEngine)\r\nexport default class STargetPlayer extends cc.Component {\r\n\r\n    @property\r\n    alwaysPointTarget:boolean = false;\r\n\r\n    @property\r\n    rotationOffset:number = 0;\r\n\r\n    moveEntity:MoveEngine;\r\n\r\n    @property\r\n    duration:number = 4;\r\n\r\n    lastVel:cc.Vec2 = cc.Vec2.ZERO;\r\n\r\n    target:cc.Node;\r\n\r\n    start () {\r\n        \r\n    }\r\n\r\n    onLoad()\r\n    {\r\n        this.moveEntity = this.getComponent(MoveEngine);\r\n    }\r\n    onEnable()\r\n    {\r\n        this.lastVel = cc.Vec2.ZERO;\r\n        this.target = ShootManager.instance.player;\r\n        this.moveEntity.target = this.target;\r\n        this.scheduleOnce(this.disableTarget,this.duration);\r\n    }\r\n    onDisable()\r\n    {\r\n        this.unschedule(this.disableTarget);\r\n    }\r\n\r\n    disableTarget()\r\n    {\r\n        this.moveEntity.target = null;\r\n        let rot = cc.misc.degreesToRadians(this.rotationOffset - this.node.rotation)\r\n        this.lastVel = cc.v2(Math.cos(rot),Math.sin(rot));\r\n        // this.node.rotation = this.rotationOffset +  this.moveEntity.velocity.signAngle(cc.Vec2.RIGHT) * cc.macro.DEG;\r\n    }\r\n\r\n    update()\r\n    {\r\n        let toTarget = this.target.position.sub(this.node.position);\r\n        // if(toTarget.magSqr() < 200 * 200)\r\n        // {\r\n        //     this.moveEntity.target = this.target;\r\n        // }\r\n        if(this.moveEntity.target == null) {\r\n            this.moveEntity.applyForce(this.lastVel)\r\n            return ;\r\n        }\r\n        if(this.alwaysPointTarget)\r\n        {\r\n            this.node.rotation = this.rotationOffset +  toTarget.signAngle(cc.Vec2.RIGHT) * cc.macro.DEG;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // update (dt) {}\r\n}\r\n"]}