{"version":3,"sources":["assets\\framework\\misc\\PsFx.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Device from \"./Device\";\r\nimport ccUtil from \"../utils/ccUtil\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"动画特效/PSFX\")\r\nexport default class PsFx extends cc.Component {\r\n\r\n    // @property([cc.ParticleSystem])\r\n    particles: cc.ParticleSystem[] = []\r\n\r\n    // @property([cc.Animation])\r\n    animations: cc.Animation[] = []\r\n\r\n\r\n    // armature:dragonBones.ArmatureDisplay = null\r\n    armature: dragonBones.ArmatureDisplay = null;\r\n\r\n    defaultAnim: string = ''\r\n\r\n    // name:string = null;\r\n\r\n    // _callback:Function;\r\n    // _target:any;\r\n\r\n    isPlaying: boolean = false;\r\n\r\n    @property({ type: cc.AudioClip })\r\n    sfx: cc.AudioClip = null\r\n\r\n    @property(cc.Sprite)\r\n    sprite: cc.Sprite = null\r\n\r\n    @property\r\n    childAnimation: boolean = true;\r\n\r\n    @property\r\n    duration: number = -1;\r\n\r\n    @property\r\n    fadeAfterFinish: number = -1;\r\n\r\n    @property\r\n    repeatTime: number = 1;\r\n\r\n    @property\r\n    removeAfterFinish: boolean = false;\r\n\r\n    @property\r\n    hideAfterFinish: boolean = true;\r\n\r\n    private _label: cc.Label = null;\r\n\r\n    public get label(): cc.Label {\r\n        if (this._label == null) {\r\n            this._label = this.getComponentInChildren(cc.Label)\r\n        }\r\n        return this._label;\r\n    }\r\n\r\n    @property\r\n    resetOrigin: boolean = true;\r\n\r\n    onLoad() {\r\n        if (this.sprite == null) {\r\n            this.sprite = this.getComponent(cc.Sprite);\r\n            this.sprite = this.sprite || this.node.getComponentInChildren(cc.Sprite);\r\n        }\r\n        let anim = this.getComponent(cc.Animation)\r\n        if (anim) {\r\n            this.animations.push(anim);\r\n        }\r\n        let root_ps = this.getComponent(cc.ParticleSystem)\r\n        root_ps && this.particles.push(root_ps)\r\n        for (let i = 0; i < this.node.childrenCount; i++) {\r\n            const child = this.node.children[i]\r\n            let ps = child.getComponent(cc.ParticleSystem)\r\n            if (ps)\r\n                this.particles.push(ps);\r\n            else if (this.childAnimation) {\r\n                let anim = child.getComponent(cc.Animation)\r\n                if (anim)\r\n                    this.animations.push(anim);\r\n            }\r\n        }\r\n        if (typeof (dragonBones) != \"undefined\") {\r\n            this.armature = this.getComponent(dragonBones.ArmatureDisplay);\r\n            // if (!this.armature)\r\n            // this.armature = this.getComponentInChildren(dragonBones.ArmatureDisplay);\r\n            if (this.armature) {\r\n                this.defaultAnim = this.armature.animationName\r\n            }\r\n        }\r\n    }\r\n\r\n    play(audio: cc.AudioClip = null, spriteFrame = null) {\r\n        this.isPlaying = true;\r\n        let dur = 0;\r\n        if (audio) {\r\n            this.sfx = audio\r\n        }\r\n        if (spriteFrame) {\r\n            if (typeof (spriteFrame) == \"string\") {\r\n                ccUtil.setDisplay(this.sprite, spriteFrame)\r\n            } else {\r\n                this.sprite.spriteFrame = spriteFrame;\r\n            }\r\n        }\r\n\r\n        this.node.active = true;\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            const element = this.particles[i];\r\n            element.resetSystem();\r\n            if (dur < element.duration) {\r\n                dur = element.duration + element.life + element.lifeVar\r\n            }\r\n        }\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            const element = this.animations[i];\r\n            let clips = element.getClips()\r\n            if (clips && clips.length > 0) {\r\n                let clip = clips[0]\r\n                let duration = clip.duration / clip.speed\r\n                if (duration > dur) {\r\n                    dur = duration;\r\n                }\r\n                element.play(clip.name);\r\n            }\r\n        }\r\n\r\n        if (this.sfx) {\r\n            Device.playEffect(this.sfx, false);\r\n        }\r\n\r\n        if (this.armature) {\r\n            this.armature.playAnimation(this.defaultAnim, this.repeatTime);\r\n            dur = this.duration\r\n            if (dur <= 0) {\r\n                return new Promise((resolve, reject) => {\r\n                    // this.armature.addEventListener(dragonBones.EventObject.LOOP_COMPLETE, _=>{\r\n                    //     console.log(\"loop complete\");\r\n                    //     this.fadeOnFinish(resolve)\r\n                    // })\r\n                    this.armature.addEventListener(dragonBones.EventObject.COMPLETE, _ => {\r\n                        console.log(\"armature play complete\");\r\n                        if (this.removeAfterFinish) {\r\n                            this.node.removeFromParent();\r\n                        } else {\r\n                            this.fadeOnFinish(resolve)\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        } else {\r\n            if (this.duration > 0) {\r\n                dur = this.duration\r\n            } else {\r\n                dur = dur + 0.1;\r\n            }\r\n        }\r\n        // console.log(\"[psfx] play : \" ,  this.name,  dur);\r\n        return new Promise((resolve, reject) => {\r\n            this.scheduleOnce(_ => {\r\n                if (!this.isValid) return resolve()\r\n                if (this.removeAfterFinish) {\r\n                    this.node.removeFromParent();\r\n                    resolve();\r\n                } else {\r\n                    this.fadeOnFinish(resolve)\r\n                }\r\n            }, dur)\r\n        })\r\n    }\r\n\r\n    fadeOnFinish(callback) {\r\n        this.isPlaying = false;\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            const element = this.particles[i];\r\n            element.stopSystem();\r\n        }\r\n        if (this.fadeAfterFinish > 0) {\r\n            let seq = cc.sequence(cc.fadeOut(this.fadeAfterFinish), cc.callFunc(callback))\r\n            this.node.runAction(seq)\r\n        } else {\r\n            if (this.hideAfterFinish) {\r\n                this.node.active = false;\r\n            }\r\n            callback();\r\n        }\r\n    }\r\n\r\n    reset(): any {\r\n        if (this.resetOrigin)\r\n            this.node.position = cc.Vec2.ZERO;\r\n        this.node.opacity = 255;\r\n        this.animations.forEach(v => v.stepTo(0))\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}