{"version":3,"sources":["assets\\framework\\ui\\ToastManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAA8C;AAGxC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAEjC,QAAA,KAAK,GAAiB,IAAI,CAAC;AAGtC;IAA0C,gCAAY;IAAtD;QAAA,qEAuDC;QAjDG,YAAM,GAAY,EAAE,CAAC,EAAE,EAAE,CAAC;;QAgD1B,iBAAiB;IACrB,CAAC;IA/CG,6BAAM,GAAN;QACI,aAAK,GAAG,IAAI,CAAC;IACjB,CAAC;IAED,4BAAK,GAAL;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;IAEvC,CAAC;IAED,gCAAS,GAAT;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,2BAAI,GAAJ,UAAK,IAAI,EAAE,GAAO;QAAP,oBAAA,EAAA,OAAO;QACd,aAAa;QACb,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAChC,IAAI,SAAS,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,IAAI,IAAI,EAAE;YACd,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,wBAAc,CAAC,CAAC;YAC9C,IAAI,SAAS,IAAI,IAAI,EAAE;gBACnB,OAAO,CAAC,IAAI,CAAC,wDAAwD,CAAC,CAAA;aACzE;YACD,oCAAoC;YACpC,uCAAuC;YACvC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACnE;aAAM;YACH,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,wBAAc,CAAC,CAAC;SACjD;QACD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI;YACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAA;QAC/B,OAAO,SAAS,CAAC;IACrB,CAAC;IAEO,2BAAI,GAAZ,UAAa,SAAyB,EAAE,IAAI,EAAE,GAAG;QAAjD,iBAQC;QAPG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QACpB,IAAI,CAAC,YAAY,CAAC,UAAA,CAAC;YACf,SAAS,CAAC,IAAI,CAAC,UAAA,CAAC;gBACZ,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;gBAClC,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC;QACP,CAAC,EAAE,GAAG,CAAC,CAAA;IACX,CAAC;IAjDD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;gDACH;IAGjB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACQ;IANT,YAAY;QADhC,OAAO;OACa,YAAY,CAuDhC;IAAD,mBAAC;CAvDD,AAuDC,CAvDyC,EAAE,CAAC,SAAS,GAuDrD;kBAvDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import ToastComponent from \"./ToastComponent\";\r\nimport { V2ChangeAction } from \"../misc/BoostsAction\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport var Toast: ToastManager = null;\r\n\r\n@ccclass\r\nexport default class ToastManager extends cc.Component {\r\n    toastPool: cc.NodePool;\r\n    @property(cc.Prefab)\r\n    prefab: cc.Prefab\r\n\r\n    @property(cc.Vec2)\r\n    offset: cc.Vec2 = cc.v2();\r\n\r\n    onLoad() {\r\n        Toast = this;\r\n    }\r\n\r\n    start() {\r\n        this.toastPool = new cc.NodePool();\r\n\r\n    }\r\n\r\n    onDestroy() {\r\n        this.toastPool.clear();\r\n    }\r\n\r\n    make(text, dur = 2) {\r\n        //show toast \r\n        let node = this.toastPool.get();\r\n        let toastComp = null;\r\n        if (node == null) {\r\n            node = cc.instantiate(this.prefab);\r\n            toastComp = node.getComponent(ToastComponent);\r\n            if (toastComp == null) {\r\n                console.warn(\"Toast.make : Toast Prefab must contains ToastComponent\")\r\n            }\r\n            // ToastManager.toastPool.put(node);\r\n            // node = ToastManager.toastPool.get();\r\n            node.setPosition(node.x + this.offset.x, node.y + this.offset.y)\r\n        } else {\r\n            toastComp = node.getComponent(ToastComponent);\r\n        }\r\n        if (node.parent == null)\r\n            this.node.addChild(node, 99999);\r\n\r\n        this.show(toastComp, text, dur)\r\n        return toastComp;\r\n    }\r\n\r\n    private show(toastComp: ToastComponent, text, dur) {\r\n        toastComp.show(text)\r\n        this.scheduleOnce(_ => {\r\n            toastComp.hide(_ => {\r\n                this.toastPool.put(toastComp.node)\r\n                console.log(\"Toast.hide toastpool size:\", this.toastPool.size())\r\n            });\r\n        }, dur)\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}