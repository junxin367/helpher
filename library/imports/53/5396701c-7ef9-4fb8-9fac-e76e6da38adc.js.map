{"version":3,"sources":["assets\\Game\\Scripts\\UI\\UIChallengeChapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yDAAoD;AACpD,wDAAuD;AACvD,mEAA8D;AAExD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE/B,QAAA,GAAG,GAAW,CAAC,CAAC;AAG7B;IAAgD,sCAAO;IAAvD;QAAA,qEAyCC;QAtCG,YAAM,GAAc,IAAI,CAAC;QAGzB,eAAS,GAAkB,IAAI,CAAC;QAEhC,WAAK,GAAa,EAAE,CAAC;;QAgCrB,iBAAiB;IACrB,CAAC;IA/BG,mCAAM,GAAN;QAAA,iBAEC;QADG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC;IAChD,CAAC;IAED,mCAAM,GAAN;QACI,CAAC,uBAAU,CAAC,iBAAiB,IAAI,CAAC,uBAAU,CAAC,iBAAiB,GAAG,uBAAU,CAAC,UAAU,CAAC,CAAC;QAExF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,GAAG,WAAG,CAAC,CAAC;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC,GAAG,uBAAU,CAAC,iBAAiB,GAAG,WAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;IAChG,CAAC;IAED,kCAAK,GAAL;IAEA,CAAC;IAED,uCAAU,GAAV;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,gCAAsB,CAAC,CAAC;QAC3E,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,uBAAU,CAAC,iBAAiB,CAAC,CAAC;QAC3D,8BAA8B;IAClC,CAAC;IAED,uCAAU,GAAV;QACI,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;sDACK;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;yDACQ;IANf,kBAAkB;QADtC,OAAO;OACa,kBAAkB,CAyCtC;IAAD,yBAAC;CAzCD,AAyCC,CAzC+C,iBAAO,GAyCtD;kBAzCoB,kBAAkB","file":"","sourceRoot":"/","sourcesContent":["\nimport mvcView from \"../../../framework/ui/mvcView\";\nimport { PlayerInfo } from \"../Common/Base/PlayerInfo\";\nimport UIChallengeChapterItem from \"./UIChallengeChapterItem\";\n\nconst { ccclass, property } = cc._decorator;\n\nexport const ROW: number = 5;\n\n@ccclass\nexport default class UIChallengeChapter extends mvcView {\n\n    @property(cc.Layout)\n    layout: cc.Layout = null;\n\n    @property(cc.ScrollView)\n    scoreView: cc.ScrollView = null;\n\n    datas: number[] = [];\n\n    onLoad() {\n        this.register(this.layout, _ => this.datas);\n    }\n\n    onShow() {\n        !PlayerInfo.playingDailyLevel && (PlayerInfo.playingDailyLevel = PlayerInfo.dailylevel);\n\n        this.datas.splice(0);\n        let max = Math.ceil(csv.daily_level.values.length / ROW);\n        for (let i = 1; i <= max; i++) {\n            this.datas.push(i);\n        }\n        this.render();\n        this.scoreView.scrollToPercentVertical((1 - PlayerInfo.playingDailyLevel / ROW / max), 0.2);\n    }\n\n    start() {\n\n    }\n\n    click_play() {\n        let item = this.layout.node.getComponentInChildren(UIChallengeChapterItem);\n        item && item.click_startGame(PlayerInfo.playingDailyLevel);\n        // Main.instance.click_play();\n    }\n\n    clic_close() {\n        vm.hide(this);\n    }\n\n    // update (dt) {}\n}\n"]}