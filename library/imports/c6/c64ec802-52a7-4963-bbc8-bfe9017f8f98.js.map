{"version":3,"sources":["assets\\framework\\extension\\qanim\\BreathAnim.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAsC;AACtC,kDAAiD;AACjD,yCAAuC;AACnC,IAAA,KAA8B,EAAE,CAAC,UAAU,EAAzC,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAkB,CAAA;AAG/C,yCAAyC;AAIzC;IAAwC,8BAAY;IAApD;QAAA,qEA+BC;QA9BG,eAAS,GAAc,IAAI,CAAA;QAE3B,cAAQ,GAAW,GAAG,CAAC;QAEvB,cAAQ,GAAY,EAAE,CAAC,EAAE,EAAE,CAAC;QAE5B,cAAQ,GAAY,EAAE,CAAC,EAAE,EAAE,CAAC;QAG5B,cAAQ,GAAa,mBAAQ,CAAC,MAAM,CAAC;QAUrC,eAAS,GAAY,EAAE,CAAC,EAAE,EAAE,CAAC;;IAWjC,CAAC;IAnBG,kCAAkC;IAClC,mCAAmC;IAEnC,0BAAK,GAAL;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAA;QAC1E,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IAID,2BAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAChC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,mBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACzC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,oBAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAC5E,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;SAC1B;IACL,CAAC;IA1BD;QADC,QAAQ;gDACc;IAEvB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACU;IAE5B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACU;IAG5B;QADC,QAAQ,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAQ,CAAC,EAAE,CAAC;gDACD;IAVpB,UAAU;QAF9B,OAAO,CAAC,YAAY,CAAC;QACrB,IAAI,CAAC,iBAAiB,CAAC;OACH,UAAU,CA+B9B;IAAD,iBAAC;CA/BD,AA+BC,CA/BuC,EAAE,CAAC,SAAS,GA+BnD;kBA/BoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import { EaseType } from \"./EaseType\";\r\nimport { PasrTimer } from \"../../misc/PasrTimer\";\r\nimport { lerpVec2 } from \"./Extension\";\r\nlet { ccclass, property, menu } = cc._decorator\r\n\r\n\r\n// let EasingEnum = Enum(typeof (easing))\r\n\r\n@ccclass(\"BreathAnim\")\r\n@menu(\"基础动画/BreathAnim\")\r\nexport default class BreathAnim extends cc.Component {\r\n    pasrTimer: PasrTimer = null\r\n    @property\r\n    duration: number = 1.0;\r\n    @property(cc.Vec2)\r\n    minScale: cc.Vec2 = cc.v2();\r\n    @property(cc.Vec2)\r\n    maxScale: cc.Vec2 = cc.v2();\r\n\r\n    @property({ type: cc.Enum(EaseType) })\r\n    easeType: EaseType = EaseType.linear;\r\n\r\n    // @property({ type: EasingEnum })\r\n    // easingType: typeof easing = null\r\n\r\n    start() {\r\n        this.pasrTimer = new PasrTimer(0, this.duration / 2, 0, this.duration / 2)\r\n        this.pasrTimer.reset();\r\n    }\r\n\r\n    tmp_scale: cc.Vec2 = cc.v2();\r\n\r\n    update(dt) {\r\n        var t = this.pasrTimer.Tick(dt);\r\n        t = cc.easing[EaseType[this.easeType]](t)\r\n        this.node.scale = lerpVec2(this.tmp_scale, this.maxScale, this.minScale, t);\r\n        if (this.pasrTimer.isFinished()) {\r\n            this.pasrTimer.reset();\r\n        }\r\n    }\r\n\r\n}"]}