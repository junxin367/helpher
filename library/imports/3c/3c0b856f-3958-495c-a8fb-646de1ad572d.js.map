{"version":3,"sources":["assets\\framework\\misc\\PsFxPlayer.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import PsFx from \"./PsFx\";\r\nimport Device from \"./Device\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\nexport interface PlayOptions {\r\n    label?: string;\r\n    spriteFrame?: cc.SpriteFrame;\r\n    x?: number,\r\n    y?: number,\r\n}\r\n\r\n@ccclass\r\n@menu(\"动画特效/PsFxPlayer\")\r\nexport default class PsFxPlayer extends cc.Component {\r\n\r\n    @property(cc.Prefab)\r\n    prefab: cc.Prefab = null\r\n\r\n    @property\r\n    prefabPath: string = '';\r\n\r\n    // @property(PsFx)\r\n    defaultFx: PsFx = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    spriteFrame: cc.SpriteFrame = null\r\n\r\n    @property(cc.AudioClip)\r\n    audioClip: cc.AudioClip;\r\n\r\n    @property\r\n    duration: number = -1;\r\n\r\n    @property\r\n    randomRotaion: boolean = false;\r\n\r\n    @property\r\n    scale: number = 1;\r\n    onLoad() {\r\n        // if (this.defaultFx == null)\r\n        //     this.defaultFx = this.getComponent(PsFx);\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n\r\n    loadPrefab() {\r\n        if (this.prefabPath == null || isEmpty(this.prefabPath)) return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            cc.resources.load(this.prefabPath, (err, res) => {\r\n                if (err) reject(err)\r\n                this.prefab = res;\r\n                resolve(res);\r\n            })\r\n        })\r\n    }\r\n\r\n    clear() {\r\n        if (this.defaultFx) {\r\n            this.defaultFx.node.destroy();\r\n        }\r\n        this.defaultFx = null;\r\n        this.prefab = null;\r\n    }\r\n\r\n    get fx() {\r\n        if (this.defaultFx == null && this.prefab) {\r\n            let node = cc.instantiate(this.prefab);\r\n            if (node == null) return null;\r\n            let fx = node.getComponent(PsFx)\r\n            if (fx == null) {\r\n                fx = node.addComponent(PsFx);\r\n            }\r\n            node.setPosition(0, 0);\r\n            node.setParent(this.node);\r\n            this.defaultFx = fx;\r\n        }\r\n        return this.defaultFx;\r\n    }\r\n\r\n    preload() {\r\n        this.loadPrefab().then(v => {\r\n            this.fx.node.active = false;\r\n        }).catch(e => console.error(e))\r\n    }\r\n\r\n    get isPlaying() {\r\n        if (!this.fx) return false;\r\n        return this.fx.isPlaying;\r\n    }\r\n\r\n    onEnable() {\r\n\r\n    }\r\n\r\n    onDisable() {\r\n        let fx = this.defaultFx;\r\n        if (fx)\r\n            fx.node.active = false;\r\n    }\r\n\r\n    sleep(sec):Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(_ => {\r\n                resolve();\r\n            }, sec)\r\n        })\r\n    };\r\n\r\n    hide() {\r\n        if (this.fx && this.fx.node)\r\n            this.fx.node.active = false;\r\n    }\r\n\r\n    setOptions(fx: PsFx, options: PlayOptions) {\r\n        if (options) {\r\n            fx.node.x = options.x || fx.node.x\r\n            fx.node.y = options.y || fx.node.y\r\n            if (fx.label)\r\n                fx.label.string = options.label || fx.label.string\r\n        }\r\n    }\r\n\r\n    async play(options?: PlayOptions, audio?) {\r\n        Device.playEffect(this.audioClip, false);\r\n        let fx = this.fx;\r\n        if (!fx) {\r\n            if (this.prefab == null && this.prefabPath != null) {\r\n                await this.loadPrefab();\r\n            }\r\n        }\r\n        fx = this.fx;\r\n        if (fx) {\r\n            if (this.randomRotaion)\r\n                fx.node.rotation = g.randomInt(0, 360);\r\n            fx.reset();\r\n            this.setOptions(fx, options);\r\n            fx.node.scale = this.scale;\r\n            return fx.play(audio || this.audioClip, (options && options.spriteFrame) || this.spriteFrame);\r\n        } else {\r\n            if (this.duration > 0)\r\n                await this.sleep(this.duration * 1000);\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}