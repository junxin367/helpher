{"version":3,"sources":["assets\\framework\\misc\\Net.ts"],"names":[],"mappings":";;;;;;;AAAA;IAAA;QAQI,aAAQ,GAAU,IAAI,CAAC;QAqDvB,YAAO,GAAG,EAAE,CAAC;IA2BjB,CAAC;IA9EG,wBAAU,GAAV,UAAW,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IAED,yBAAW,GAAX,UAAY,GAAG,EAAE,MAAM,EAAE,MAAO;QAAhC,iBA6CC;QA5CG,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,CAAA;QACvC,OAAO,IAAI,OAAO,CAAC,UAAA,CAAC;YAChB,IAAI,IAAI,GAAG,KAAK,CAAC,CAAA,MAAM;YACvB,IAAI,KAAK,GAAG,UAAU,CAAC;gBACnB,IAAI,GAAG,IAAI,CAAC;gBACZ,GAAG,CAAC,KAAK,EAAE,CAAC,CAAA,MAAM;gBAClB,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC,EAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACjB,IAAI,GAAG,GAAG,IAAI,cAAc,CAAC;YAC7B,GAAG,CAAC,kBAAkB,GAAG;gBACrB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;oBACtB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;wBACvC,IAAI,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC;wBAC/B,IAAG,IAAI;4BAAE,OAAO,CAAA,eAAe;wBAC/B,YAAY,CAAC,KAAK,CAAC,CAAC,CAAA,aAAa;wBACjC,CAAC,CAAC,OAAO,CAAC,CAAC;qBACd;yBAAM;wBACH,CAAC,CAAC,IAAI,CAAC,CAAC;qBACX;iBACJ;YACL,CAAC,CAAC;YACF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAE5B,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE;gBACjB,GAAG,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;aAC3D;YACD,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;gBAC/B,IAAI,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxB,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAA;YAEF,4FAA4F;YAC5F,+CAA+C;YAC/C,GAAG,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,CAAA,wBAAwB;YACpD,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE;gBACrC,qBAAqB;gBACrB,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAA;gBACxD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACpB;iBAAM;gBACH,GAAG,CAAC,IAAI,EAAE,CAAC;aACd;QAEL,CAAC,CAAC,CAAA;IAEN,CAAC;IAID,uBAAS,GAAT,UAAU,GAAG,EAAE,KAAK;QAChB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAA;IAC7B,CAAC;IAGD,qBAAO,GAAP,UAAQ,GAAG,EAAE,MAAO;QAChB,IAAI,MAAM,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;YAClC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC;gBAC9B,GAAG,IAAI,GAAG,CAAA;SACjB;QACD,IAAI,MAAM;YACN,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAG,CAAC,SAAI,MAAM,CAAC,CAAC,CAAG,EAAnB,CAAmB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACtE,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;IACvC,CAAC;IAED,sBAAQ,GAAR,UAAS,GAAG,EAAE,MAAO;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAED,qBAAO,GAAP,UAAQ,GAAG,EAAE,MAAO;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC;IAlFM,QAAI,GAAG;QACV,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,aAAa;KACzB,CAAA;IAkFL,UAAC;CAxFD,AAwFC,IAAA;kBAxFoB,GAAG;AA0Fb,QAAA,GAAG,GAAQ,IAAI,GAAG,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["export default class Net {\r\n\r\n    static Code = {\r\n        Error: \"__error__\",\r\n        Success: 1,\r\n        Timeout: \"__timeout__\"\r\n    }\r\n\r\n    _timeout:number = 8000;\r\n\r\n    setTimeout(v){\r\n        this._timeout = v;\r\n    }\r\n\r\n    httpRequest(url, method, params?): Promise<string> {\r\n        console.log('[' + method + ']: ' + url)\r\n        return new Promise(_ => {\r\n            var time = false;//是否超时\r\n            var timer = setTimeout(function(){\r\n                time = true;\r\n                xhr.abort();//请求中止\r\n                _(Net.Code.Timeout);\r\n            },this._timeout);\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        var respone = xhr.responseText;\r\n                        if(time) return;//请求已经超时，忽略中止请求\r\n                        clearTimeout(timer);//取消等待的超时    \r\n                        _(respone);\r\n                    } else {\r\n                        _(null);\r\n                    }\r\n                }\r\n            };\r\n            xhr.open(method, url, true);\r\n\r\n            if (cc.sys.isNative) {\r\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n            }\r\n            Object.keys(this.headers).forEach(k => {\r\n                let v = this.headers[k];\r\n                xhr.setRequestHeader(k, v);\r\n            })\r\n\r\n            // note: In Internet Explorer, the timeout property may be set only after calling the open()\r\n            // method and before calling the send() method.\r\n            xhr.timeout = this._timeout;// 8 seconds for timeout\r\n            if (method == \"POST\" || method == \"PUT\") {\r\n                //set params to body \r\n                xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n                xhr.send(params);\r\n            } else {\r\n                xhr.send();\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    headers = {};\r\n\r\n    setHeader(key, value) {\r\n        this.headers[key] = value\r\n    }\r\n\r\n\r\n    httpGet(url, params?) {\r\n        if (params && url.indexOf(\"?\") == -1) {\r\n            if (Object.keys(params).length > 0)\r\n                url += \"?\"\r\n        }\r\n        if (params)\r\n            url += Object.keys(params).map(k => `${k}=${params[k]}`).join(\"&\")\r\n        return this.httpRequest(url, 'GET')\r\n    }\r\n\r\n    httpPost(url, params?): Promise<string> {\r\n        return this.httpRequest(url, \"POST\", params);\r\n    }\r\n\r\n    httpPut(url, params?) {\r\n        return this.httpRequest(url, \"PUT\", params);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport let net: Net = new Net();"]}