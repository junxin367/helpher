{"version":3,"sources":["assets\\framework\\ui\\controller\\CrossPad.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAkC;AAClC,4CAAuC;AAGjC,IAAA,KAA6B,EAAE,CAAC,UAAU,EAAzC,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAG,IAAI,UAAiB,CAAC;AAEjD,IAAK,WAMJ;AAND,WAAK,WAAW;IACZ,6CAAI,CAAA;IACJ,6CAAI,CAAA;IACJ,+CAAK,CAAA;IACL,yCAAE,CAAA;IACF,6CAAI,CAAA;AACR,CAAC,EANI,WAAW,KAAX,WAAW,QAMf;AAID;IAAsC,4BAAY;IAAlD;QAAA,qEAkDC;QA5CG,UAAI,GAAW,IAAI,CAAC;QAEpB,WAAK,GAAW,IAAI,CAAC;QAErB,QAAE,GAAW,IAAI,CAAC;QAElB,UAAI,GAAW,IAAI,CAAC;QAEpB,eAAS,GAAc,IAAI,gBAAM,EAAE,CAAC;QAEpC,UAAI,GAAc,EAAE,CAAA;;QAiCpB,iBAAiB;IACrB,CAAC;IAhCG,wBAAK,GAAL;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAQ,CAAC,CAAC;QAEtD,IAAI,CAAC,IAAI,GAAG,CAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAC1B;YACI,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,GAAG,CAAC,KAAK,CAAC,GAAI,CAAC,GAAE,CAAC,CAAC;YACnB,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAG,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,CAAC;YAC3D,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAG,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC,CAAC;SAClE;IACL,CAAC;IAED,+BAAY,GAAZ,UAAa,KAAK;QACd,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAE;IAC/B,CAAC;IAGD,6BAAU,GAAV,UAAW,GAAG;QACV,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAG,GAAG,IAAI,WAAW,CAAC,IAAI,EAAC;YACvB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;SAC9B;aAAK,IAAG,GAAG,IAAI,WAAW,CAAC,KAAK,EACjC;YACI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IA7CM,YAAG,GAAG,WAAW,CAAC;IAIzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACE;IAEpB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2CACG;IAErB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wCACA;IAElB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;0CACE;IAZH,QAAQ;QAF5B,OAAO;QACP,IAAI,CAAC,qBAAqB,CAAC;OACP,QAAQ,CAkD5B;IAAD,eAAC;CAlDD,AAkDC,CAlDqC,EAAE,CAAC,SAAS,GAkDjD;kBAlDoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import Switcher from \"./Switcher\";\r\nimport Signal from \"../../core/Signal\";\r\n\r\n\r\nconst {ccclass, property , menu} = cc._decorator;\r\n\r\nenum CrossPadDir{\r\n    Idle,\r\n    Left,\r\n    Right,\r\n    Up,\r\n    Down,\r\n}\r\n\r\n@ccclass\r\n@menu(\"Controller/CrossPad\")\r\nexport default class CrossPad extends cc.Component {\r\n\r\n    static Dir = CrossPadDir;\r\n    switcher:Switcher ;\r\n\r\n    @property(cc.Node)\r\n    left:cc.Node = null;\r\n    @property(cc.Node)\r\n    right:cc.Node = null;\r\n    @property(cc.Node)\r\n    up:cc.Node = null;\r\n    @property(cc.Node)\r\n    down:cc.Node = null;\r\n\r\n    onTouchUp:Signal     = new Signal();\r\n\r\n    dirs:cc.Node [] = []\r\n\r\n    start () {\r\n        this.switcher = this.getComponentInChildren(Switcher);\r\n\r\n        this.dirs = [ this.left ,this.right , this.up, this.down];\r\n        for (var i = 0 ;i < 4; i++)\r\n        {\r\n            var dir = this.dirs[i];\r\n            dir[\"dir\"] =  i+ 1;\r\n            dir.on(cc.Node.EventType.TOUCH_END , this.onTouchUpC,this);\r\n            dir.on(cc.Node.EventType.TOUCH_START , this.onTouchDownC,this);\r\n        }\r\n    }\r\n\r\n    onTouchDownC(event){\r\n        let dir = event.target[\"dir\"];\r\n        this.switcher.index = dir ;\r\n    }\r\n\r\n\r\n    onTouchUpC(evt){\r\n        this.switcher.index = 0;\r\n        let dir = event.target[\"dir\"];\r\n        if(dir == CrossPadDir.Left){\r\n            console.log(\"touch left \");\r\n        }else if(dir == CrossPadDir.Right)\r\n        {\r\n            console.log(\"touch Right \");\r\n        }\r\n        this.onTouchUp.fire(dir);\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}