{"version":3,"sources":["assets\\framework\\misc\\LoadingSceneBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Platform from \"../extension/Platform\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n\r\nlet is_first = true\r\nlet with_server = true;\r\n\r\nconst LOADING_SCENE_NAME = \"LoadingScene\"\r\nlet targetScene: string = null;\r\n@ccclass\r\nexport default class LoadingSceneBase extends cc.Component {\r\n    static param: any = null;\r\n    static ResPrefab: cc.Prefab = null\r\n\r\n    @property\r\n    defaultSceneName: string = \"Home\"\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property(cc.Label)\r\n    private percentLabel: cc.Label = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private bar: cc.ProgressBar = null;\r\n\r\n    onLoad() {\r\n        targetScene = targetScene || this.defaultSceneName;\r\n    }\r\n    start() {\r\n\r\n        this.bar.progress = 0;\r\n        this.label.string = \"加载中...\"\r\n    }\r\n\r\n    set progress(p) {\r\n        if (this.bar) {\r\n            this.bar.progress = p\r\n            this.percentLabel.string = Math.floor(p * 100) + \"%\"\r\n        }\r\n    }\r\n\r\n    loadNextScene(prefabTobeLoad?) {\r\n        targetScene = targetScene || this.defaultSceneName;\r\n        this.label.string = '加载场景资源'\r\n        return new Promise((resolve, reject) => {\r\n            cc.director.preloadScene(targetScene, (c, t, i) => {\r\n                this.percentLabel.string = `${(c / t * 100).toFixed(1)}%`\r\n                this.bar.progress = c / t;\r\n            }, _ => {\r\n                // evt.emit(\"SceneChange\")\r\n                if (prefabTobeLoad) {\r\n                    cc.resources.load(prefabTobeLoad, cc.Prefab, (err, prefab) => {\r\n                        cc.director.loadScene(targetScene, _ => {\r\n                            let node = cc.instantiate(prefab)\r\n                            cc.director.getScene().addChild(node, -1);\r\n                            this.onLoadFinished()\r\n                        })\r\n                    })\r\n\r\n                } else {\r\n                    cc.director.loadScene(targetScene, _ => {\r\n                        this.onLoadFinished()\r\n                    });\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    onLoadFinished(node?) {\r\n        let root = cc.find(\"Canvas\")\r\n        if (root) {\r\n            root.getComponents(cc.Component).forEach((v: any) => {\r\n                if (v.onLoadFinished) {\r\n                    v.onLoadFinished(LoadingSceneBase.param, node)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async loadSubPackage(packageName, txt) {\r\n        if (this.label) {\r\n            this.label.string = txt\r\n        }\r\n        await Platform.loadSubPackage(packageName, (p, k, t) => {\r\n            if (this.progress)\r\n                this.progress = p / 100;\r\n        })\r\n    }\r\n\r\n    static setNextScene(scene) {\r\n        targetScene = scene\r\n    }\r\n\r\n    static getNextScene() {\r\n        return targetScene\r\n    }\r\n\r\n    static goto(sceneName, param = null) {\r\n        LoadingSceneBase.param = param\r\n        targetScene = sceneName\r\n        cc.director.loadScene(LOADING_SCENE_NAME)\r\n    }\r\n\r\n\r\n}"]}