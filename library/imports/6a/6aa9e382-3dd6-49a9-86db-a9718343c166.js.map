{"version":3,"sources":["assets\\Game\\Scripts\\Levels\\SpecialLevel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { evt } from \"../../../framework/core/event\";\r\nimport { Toast } from \"../../../framework/ui/ToastManager\";\r\nimport Device from \"../../../framework/misc/Device\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\nexport enum RoleType {\r\n    Balloon,\r\n    Enemy,\r\n    Star,\r\n    Box,\r\n    Bomb,\r\n}\r\n\r\n@ccclass\r\nexport default class SpecialLevel extends cc.Component {\r\n\r\n    @property({ type: cc.Enum(RoleType) })\r\n    private _type: RoleType = RoleType.Balloon;\r\n\r\n    @property({ type: cc.Enum(RoleType) })\r\n    public get type(): RoleType {\r\n        return this._type;\r\n    }\r\n\r\n    public set type(value: RoleType) {\r\n        this._type = value;\r\n    }\r\n\r\n    @property(cc.Node)\r\n    nodes: cc.Node = null;\r\n\r\n    count: number = 0;\r\n    node_Counts: number = 0;\r\n\r\n    static instance: SpecialLevel = null\r\n\r\n    onLoad() {\r\n        SpecialLevel.instance = this;\r\n    }\r\n\r\n    gameOver() {\r\n        evt.off(this);\r\n    }\r\n\r\n    start() {\r\n        if (this.type == RoleType.Enemy) {\r\n            evt.on(\"Game.enemyDead\", this.check_enemy, this);\r\n        }\r\n        else if (this.type == RoleType.Balloon) {\r\n            evt.on(\"Game.boollonDes\", this.check_enemy, this);\r\n        }\r\n        else if (this.type == RoleType.Star) {\r\n            evt.on(\"Game.getstar\", this.check_enemy, this);\r\n        }\r\n        else if (this.type == RoleType.Box) {\r\n            return;\r\n            // evt.on(\"Game.getstar\", this.check_enemy, this);\r\n        }\r\n        else if (this.type == RoleType.Bomb) {\r\n\r\n            console.log('sd')\r\n\r\n            evt.on(\"Game.bombDes\", this.check_enemy, this);\r\n        }\r\n        this.node_Counts = this.nodes.childrenCount;\r\n    }\r\n\r\n    check_enemy() {\r\n        console.log('sd')\r\n        if (!this.enabledInHierarchy) return;\r\n        this.count += 1;\r\n        if (this.node_Counts <= this.count) {\r\n            Toast.make(\"任务完成\");\r\n            Device.playSfx(\"finish-mission\")\r\n            evt.emit(\"Game.win\");\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        evt.off(this);\r\n        SpecialLevel.instance = null;\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}